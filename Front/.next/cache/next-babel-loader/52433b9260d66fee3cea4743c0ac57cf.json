{"ast":null,"code":"var _jsxFileName = \"c:\\\\ReactNodeBird\\\\Front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../Reducer/post';\n\nvar PostForm = function PostForm() {\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      isAddingPost = _useSelector.isAddingPost,\n      postAdded = _useSelector.postAdded;\n\n  useEffect(function () {\n    setText('');\n  }, [postAdded]);\n  var onSubmitForm = useCallback(function (e) {\n    e.preventDefault();\n\n    if (!text) {\n      return alert(\"작성해!!\");\n    }\n\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        content: text.trim()\n      }\n    });\n  }, [text]);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, [text]);\n  return __jsx(Form, {\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC5EC\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Input, {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": \"right\"\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"\\uC9F9\\uC9F9\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, imagePaths.map(function (val, idx) {\n    return __jsx(\"div\", {\n      key: idx,\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: \"http://localhost:3065/\",\n      style: {\n        width: '200px'\n      },\n      alt: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"\\uC81C\\uAC70\")));\n  }))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["c:/ReactNodeBird/Front/components/PostForm.js"],"names":["React","useCallback","useState","useEffect","Form","Input","Button","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","text","setText","dispatch","state","post","imagePaths","isAddingPost","postAdded","onSubmitForm","e","preventDefault","alert","type","data","content","trim","onChangeText","target","value","map","val","idx","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState ,useEffect } from 'react';\r\nimport { Form, Input, Button, } from 'antd';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { ADD_POST_REQUEST } from '../Reducer/post';\r\n\r\nconst PostForm = () => {\r\n    const [ text , setText ] = useState('');\r\n    const dispatch = useDispatch();\r\n    const {imagePaths,isAddingPost,postAdded} = useSelector(state=>state.post)\r\n\r\n    useEffect(()=>{\r\n        setText('');\r\n    },[postAdded])\r\n    \r\n    const onSubmitForm = useCallback((e) => {\r\n        e.preventDefault();\r\n        if(!text){\r\n            return alert(\"작성해!!\")\r\n        }\r\n        dispatch({\r\n            type:ADD_POST_REQUEST,\r\n            data:{\r\n                content:text.trim(),\r\n            }\r\n        })\r\n    },[text])\r\n\r\n    const onChangeText = useCallback((e) => {\r\n        setText(e.target.value);\r\n    },[text]);\r\n    return (\r\n        <Form encType=\"multipart/form-data\" onSubmit = {onSubmitForm} >\r\n            <Input.TextArea value={text} onChange={onChangeText}  maxLength={140} placeholder=\"어떤 신기한 일이 있었나여\"></Input.TextArea>\r\n            <div>\r\n                <Input type=\"file\" multiple hidden />\r\n                <Button>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\" loading={isAddingPost} >짹짹</Button>\r\n                <div>\r\n                    {imagePaths.map((val, idx) => {\r\n                        return (\r\n                            <div key={idx} style={{ display: 'inline-block' }} >\r\n                                <img src={\"http://localhost:3065/\"} style={{ width: '200px' }} alt={idx} />\r\n                                <div>\r\n                                    <Button>제거</Button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../Reducer/post\";\nimport PostCard from \"../components/PostCard\";\nimport { Card, Avatar } from \"antd\";\nimport { LOAD_USER_REQUEST } from \"../Reducer/user\";\n\nvar User = function User(_ref) {\n  var id = _ref.id;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo,\n      me = _useSelector2.me;\n\n  useEffect(function () {}, []);\n  return __jsx(\"div\", null, userInfo ? __jsx(Card, {\n    actions: [__jsx(\"div\", {\n      key: \"twit\"\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", null), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\"\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", null), userInfo.Followings), __jsx(\"div\", {\n      key: \"follower\"\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", null), userInfo.Followers)]\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, null, userInfo.nickname[0]),\n    title: userInfo.nickname\n  })) : null, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: +c.createdAt,\n      post: c\n    });\n  }));\n};\n\nUser.getInitialProps = function _callee(context) {\n  var id;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(\"hashTag getInitialProps\", context.query.id);\n          id = _parseInt(context.query.id, 10);\n          context.store.dispatch({\n            type: LOAD_USER_REQUEST,\n            data: id\n          });\n          context.store.dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            data: id\n          });\n          return _context.abrupt(\"return\", {\n            id: id\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default User;","map":{"version":3,"sources":["C:/ReactNodeBird/Front/pages/user.js"],"names":["React","useEffect","useDispatch","useSelector","LOAD_USER_POSTS_REQUEST","PostCard","Card","Avatar","LOAD_USER_REQUEST","User","id","dispatch","state","post","mainPosts","user","userInfo","me","Posts","Followings","Followers","nickname","map","c","createdAt","getInitialProps","context","console","log","query","store","type","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,uBAAT,QAAwC,iBAAxC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAY;AAAA,MAATC,EAAS,QAATA,EAAS;AACvB,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AADuB,qBAEDC,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFV;AAAA,MAEfC,SAFe,gBAEfA,SAFe;;AAAA,sBAGEX,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAAN,CAHb;AAAA,MAGfC,QAHe,iBAGfA,QAHe;AAAA,MAGLC,EAHK,iBAGLA,EAHK;;AAKvBhB,EAAAA,SAAS,CAAC,YAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AACA,SACE,mBACGe,QAAQ,GACP,MAAC,IAAD;AACE,IAAA,OAAO,EAAE,CACP;AAAK,MAAA,GAAG,EAAC;AAAT,uBAEE,iBAFF,EAGGA,QAAQ,CAACE,KAHZ,CADO,EAMP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,iBAFF,EAGGF,QAAQ,CAACG,UAHZ,CANO,EAWP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,iBAFF,EAGGH,QAAQ,CAACI,SAHZ,CAXO;AADX,KAmBE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAE,MAAC,MAAD,QAASJ,QAAQ,CAACK,QAAT,CAAkB,CAAlB,CAAT,CADV;AAEE,IAAA,KAAK,EAAEL,QAAQ,CAACK;AAFlB,IAnBF,CADO,GAyBL,IA1BN,EA2BGP,SAAS,CAACQ,GAAV,CAAc,UAAAC,CAAC;AAAA,WACd,MAAC,QAAD;AAAU,MAAA,GAAG,EAAE,CAACA,CAAC,CAACC,SAAlB;AAA6B,MAAA,IAAI,EAAED;AAAnC,MADc;AAAA,GAAf,CA3BH,CADF;AAiCD,CAvCD;;AAyCAd,IAAI,CAACgB,eAAL,GAAuB,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,OAAO,CAACG,KAAR,CAAcnB,EAArD;AACMA,UAAAA,EAFe,GAEV,UAASgB,OAAO,CAACG,KAAR,CAAcnB,EAAvB,EAA2B,EAA3B,CAFU;AAGrBgB,UAAAA,OAAO,CAACI,KAAR,CAAcnB,QAAd,CAAuB;AACrBoB,YAAAA,IAAI,EAAEvB,iBADe;AAErBwB,YAAAA,IAAI,EAAEtB;AAFe,WAAvB;AAIAgB,UAAAA,OAAO,CAACI,KAAR,CAAcnB,QAAd,CAAuB;AACrBoB,YAAAA,IAAI,EAAE3B,uBADe;AAErB4B,YAAAA,IAAI,EAAEtB;AAFe,WAAvB;AAPqB,2CAWd;AAAEA,YAAAA,EAAE,EAAFA;AAAF,WAXc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAcA,eAAeD,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOAD_USER_POSTS_REQUEST } from \"../Reducer/post\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport { Card, Avatar } from \"antd\";\r\nimport { LOAD_USER_REQUEST } from \"../Reducer/user\";\r\n\r\nconst User = ({ id }) => {\r\n  const dispatch = useDispatch();\r\n  const { mainPosts } = useSelector(state => state.post);\r\n  const { userInfo, me } = useSelector(state => state.user);\r\n\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <div>\r\n      {userInfo ? (\r\n        <Card\r\n          actions={[\r\n            <div key=\"twit\">\r\n              짹짹\r\n              <br />\r\n              {userInfo.Posts}\r\n            </div>,\r\n            <div key=\"following\">\r\n              팔로잉\r\n              <br />\r\n              {userInfo.Followings}\r\n            </div>,\r\n            <div key=\"follower\">\r\n              팔로워\r\n              <br />\r\n              {userInfo.Followers}\r\n            </div>\r\n          ]}\r\n        >\r\n          <Card.Meta\r\n            avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n            title={userInfo.nickname}\r\n          />\r\n        </Card>\r\n      ) : null}\r\n      {mainPosts.map(c => (\r\n        <PostCard key={+c.createdAt} post={c} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nUser.getInitialProps = async context => {\r\n  console.log(\"hashTag getInitialProps\", context.query.id);\r\n  const id = parseInt(context.query.id, 10);\r\n  context.store.dispatch({\r\n    type: LOAD_USER_REQUEST,\r\n    data: id\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_POSTS_REQUEST,\r\n    data: id\r\n  });\r\n  return { id };\r\n};\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}
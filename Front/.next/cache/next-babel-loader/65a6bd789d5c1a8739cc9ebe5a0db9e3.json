{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// export const initialState={\n//     mainPosts: [{\n//         User: {\n//             id: 1,\n//             nickname: 'dbals',\n//             content: '첫 번째 게시글',\n//             img: 'https://cdn.crowdpic.net/detail-thumb/thumb_d_FF1D6AD8B887EC2359A69C049ECA2A1D.jpg'\n//         },\n//         content: '첫 번째 게시글',\n//         img: 'https://cdn.crowdpic.net/detail-thumb/thumb_d_FF1D6AD8B887EC2359A69C049ECA2A1D.jpg'\n//     }],\n//     imagePaths: [],\n//     addPostErrorReason : false,\n//     isAddingPost: false,\n// };\nexport var initialState = {\n  mainPosts: [{// id: 1,\n    // User: {\n    //   id: 1,\n    //   nickname: '제로초',\n    // },\n    // content: '첫 번째 게시글',\n    // img: 'https://cdn.crowdpic.net/detail-thumb/thumb_d_FF1D6AD8B887EC2359A69C049ECA2A1D.jpg',\n    // Comments: [],\n  }],\n  // 화면에 보일 포스트들\n  imagePaths: [],\n  // 미리보기 이미지 경로\n  addPostErrorReason: '',\n  // 포스트 업로드 실패 사유\n  isAddingPost: false,\n  // 포스트 업로드 중\n  postAdded: false,\n  // 포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false\n};\nvar dummyPost = {\n  id: 2,\n  User: {\n    id: 1,\n    nickname: '김유민'\n  },\n  content: '더미입니다.',\n  Comments: []\n};\nvar dummyComment = {\n  id: 1,\n  User: {\n    id: 1,\n    nickname: '김유민'\n  },\n  createdAt: new Date(),\n  content: '댓글입니다.'\n};\nexport var LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport var LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport var LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport var LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport var LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport var LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport var LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport var LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport var LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport var LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport var LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts)),\n          postAdded: true\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case LOAD_MAIN_POSTS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: []\n        });\n      }\n\n    case LOAD_MAIN_POSTS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: action.data\n        });\n      }\n\n    case LOAD_MAIN_POSTS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: '',\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n        var post = state.mainPosts[postIndex];\n        var Comments = [].concat(_toConsumableArray(post.Comments), [dummyComment]);\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Comments: Comments\n        });\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          mainPosts: mainPosts,\n          commentAdded: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addCommentErrorReason: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["c:/ReactNodeBird/Front/Reducer/post.js"],"names":["initialState","mainPosts","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","dummyPost","id","User","nickname","content","Comments","dummyComment","createdAt","Date","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","state","action","type","data","error","postIndex","findIndex","v","postId","post"],"mappings":"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","sourcesContent":["// export const initialState={\r\n//     mainPosts: [{\r\n//         User: {\r\n//             id: 1,\r\n//             nickname: 'dbals',\r\n//             content: '첫 번째 게시글',\r\n//             img: 'https://cdn.crowdpic.net/detail-thumb/thumb_d_FF1D6AD8B887EC2359A69C049ECA2A1D.jpg'\r\n//         },\r\n//         content: '첫 번째 게시글',\r\n//         img: 'https://cdn.crowdpic.net/detail-thumb/thumb_d_FF1D6AD8B887EC2359A69C049ECA2A1D.jpg'\r\n//     }],\r\n//     imagePaths: [],\r\n//     addPostErrorReason : false,\r\n//     isAddingPost: false,\r\n// };\r\nexport const initialState = {\r\n    mainPosts: [{\r\n      // id: 1,\r\n      // User: {\r\n      //   id: 1,\r\n      //   nickname: '제로초',\r\n      // },\r\n      // content: '첫 번째 게시글',\r\n      // img: 'https://cdn.crowdpic.net/detail-thumb/thumb_d_FF1D6AD8B887EC2359A69C049ECA2A1D.jpg',\r\n      // Comments: [],\r\n    }], // 화면에 보일 포스트들\r\n    imagePaths: [], // 미리보기 이미지 경로\r\n    addPostErrorReason: '', // 포스트 업로드 실패 사유\r\n    isAddingPost: false, // 포스트 업로드 중\r\n    postAdded: false, // 포스트 업로드 성공\r\n    isAddingComment: false,\r\n    addCommentErrorReason: '',\r\n    commentAdded: false,\r\n  };\r\n  \r\n  const dummyPost = {\r\n    id: 2,\r\n    User: {\r\n      id: 1,\r\n      nickname: '김유민',\r\n    },\r\n    content: '더미입니다.',\r\n    Comments: [],\r\n  };\r\n  \r\n  const dummyComment = {\r\n    id: 1,\r\n    User: {\r\n      id: 1,\r\n      nickname: '김유민',\r\n    },\r\n    createdAt: new Date(),\r\n    content: '댓글입니다.',\r\n  };\r\n  \r\n  export const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\r\n  export const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\r\n  export const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\r\n  \r\n  export const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\n  export const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\n  export const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n  \r\n  export const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\r\n  export const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\n  export const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n  \r\n  export const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\n  export const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\n  export const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n  \r\n  export const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n  \r\n  export const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\n  export const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\n  export const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n  \r\n  export const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\n  export const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\n  export const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n  \r\n  export const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\n  export const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\n  export const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n  \r\n  export const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\n  export const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\n  export const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n  \r\n  export const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\r\n  export const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\r\n  export const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\r\n  \r\n  export const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\n  export const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\n  export const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n  \r\n  export const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\n  export const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\n  export const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n  \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case ADD_POST_REQUEST: {\r\n        return {\r\n          ...state,\r\n          isAddingPost: true,\r\n          addPostErrorReason: '',\r\n          postAdded: false,\r\n        };\r\n      }\r\n      case ADD_POST_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          isAddingPost: false,\r\n          mainPosts: [action.data, ...state.mainPosts],\r\n          postAdded: true,\r\n        };\r\n      }\r\n      case ADD_POST_FAILURE: {\r\n        return {\r\n          ...state,\r\n          isAddingPost: false,\r\n          addPostErrorReason: action.error,\r\n        };\r\n      }\r\n      case LOAD_MAIN_POSTS_REQUEST: {\r\n        return {\r\n          ...state,\r\n          mainPosts:[],\r\n        };\r\n      }\r\n      case LOAD_MAIN_POSTS_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          mainPosts:action.data\r\n        };\r\n      }\r\n      case LOAD_MAIN_POSTS_FAILURE: {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n      case ADD_COMMENT_REQUEST: {\r\n        return {\r\n          ...state,\r\n          isAddingComment: true,\r\n          addCommentErrorReason: '',\r\n          commentAdded: false,\r\n        };\r\n      }\r\n      case ADD_COMMENT_SUCCESS: {\r\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n        const post = state.mainPosts[postIndex];\r\n        const Comments = [...post.Comments, dummyComment];\r\n        const mainPosts = [...state.mainPosts];\r\n        mainPosts[postIndex] = { ...post, Comments };\r\n        return {\r\n          ...state,\r\n          isAddingComment: false,\r\n          mainPosts,\r\n          commentAdded: true,\r\n        };\r\n      }\r\n      case ADD_COMMENT_FAILURE: {\r\n        return {\r\n          ...state,\r\n          isAddingComment: false,\r\n          addCommentErrorReason: action.error,\r\n        };\r\n      }\r\n      default: {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}
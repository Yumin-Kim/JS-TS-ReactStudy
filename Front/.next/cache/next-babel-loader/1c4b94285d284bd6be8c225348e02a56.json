{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(appPost),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchAddPost),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadMainPosts),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchMainLoadPosts),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadUserPosts),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadUserPosts),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadHashtagPosts),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadHashtagPosts),\n    _marked9 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addComment),\n    _marked10 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchAddComment),\n    _marked11 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadComments),\n    _marked12 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadComments),\n    _marked13 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(uploadImages),\n    _marked14 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchUploadImages),\n    _marked15 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(likePost),\n    _marked16 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLikePost),\n    _marked17 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(unlikePost),\n    _marked18 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchUnlikePost),\n    _marked19 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(retweet),\n    _marked20 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchRetweet),\n    _marked21 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(removePost),\n    _marked22 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchRemovePost),\n    _marked23 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadPost),\n    _marked24 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadPost),\n    _marked25 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { put, all, fork, takeLatest, delay, call, throttle } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, LOAD_MAIN_POSTS_SUCCESS, LOAD_MAIN_POSTS_REQUEST, LOAD_MAIN_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_COMMENTS_REQUEST, LOAD_COMMENTS_SUCCESS, LOAD_COMMENTS_FAILURE, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UNLIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UNLIKE_POST_REQUEST, LIKE_POST_REQUEST, LIKE_POST_FAILURE, LIKE_POST_SUCCESS, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE } from '../Reducer/post';\nimport axios from 'axios';\n\nfunction addPostAPI(postData) {\n  return axios.post('http://localhost:3065/api/post', postData, {\n    withCredentials: true\n  });\n}\n\nfunction appPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function appPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addPostAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: ADD_POST_FAILURE,\n            error: _context.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(ADD_POST_REQUEST, appPost);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction loadMainPostsAPI() {\n  var lastId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  return axios.get(\"http://localhost:3065/api/posts?lastId=\".concat(lastId, \"&limit=\").concat(limit));\n}\n\nfunction loadMainPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadMainPosts$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loadMainPostsAPI, action.lastId);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: LOAD_MAIN_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 12;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 12;\n          return put({\n            type: LOAD_MAIN_POSTS_FAILURE,\n            error: _context3.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction watchMainLoadPosts() {\n  return _regeneratorRuntime.wrap(function watchMainLoadPosts$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return throttle(2000, LOAD_MAIN_POSTS_REQUEST, loadMainPosts);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction loadUserPostsAPI(id) {\n  return axios.get(\"http://localhost:3065/api/user/\".concat(id, \"/posts\"));\n}\n\nfunction loadUserPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUserPosts$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(loadUserPostsAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: LOAD_USER_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 12;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 12;\n          return put({\n            type: LOAD_USER_POSTS_FAILURE,\n            error: _context5.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction watchLoadUserPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadUserPosts$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction loadHashtagPostsAPI(tag, lastId) {\n  return axios.get(\"http://localhost:3065/api/hashtag/\".concat(encodeURIComponent(tag), \"?lastId=\").concat(lastId, \"&limit=10\"));\n}\n\nfunction loadHashtagPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadHashtagPosts$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadHashtagPostsAPI, action.data, action.lastId);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: LOAD_HASHTAG_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context7.next = 12;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 12;\n          return put({\n            type: LOAD_HASHTAG_POSTS_FAILURE,\n            error: _context7.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchLoadHashtagPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadHashtagPosts$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return throttle(2000, LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(\"http://localhost:3065/api/posts/\".concat(data.postId, \"/comment\"), {\n    content: data.content\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction addComment(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addComment$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(addCommentAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            type: ADD_COMMENT_SUCCESS,\n            data: {\n              postId: action.data.postId,\n              comment: result.data\n            }\n          });\n\n        case 6:\n          _context9.next = 13;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error(_context9.t0);\n          _context9.next = 13;\n          return put({\n            type: ADD_COMMENT_FAILURE,\n            error: _context9.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction watchAddComment() {\n  return _regeneratorRuntime.wrap(function watchAddComment$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(ADD_COMMENT_REQUEST, addComment);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction loadCommentsAPI(postId) {\n  return axios.get(\"http://localhost:3065/api/posts/\".concat(postId, \"/comments\"));\n}\n\nfunction loadComments(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadComments$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(loadCommentsAPI, action.data);\n\n        case 3:\n          result = _context11.sent;\n          _context11.next = 6;\n          return put({\n            type: LOAD_COMMENTS_SUCCESS,\n            data: {\n              postId: action.data,\n              comments: result.data\n            }\n          });\n\n        case 6:\n          _context11.next = 13;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          console.error(_context11.t0);\n          _context11.next = 13;\n          return put({\n            type: LOAD_COMMENTS_FAILURE,\n            error: _context11.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 8]]);\n}\n\nfunction watchLoadComments() {\n  return _regeneratorRuntime.wrap(function watchLoadComments$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(LOAD_COMMENTS_REQUEST, loadComments);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction uploadImagesAPI(formData) {\n  return axios.post(\"http://localhost:3065/api/post/images\", formData, {\n    withCredentials: true\n  });\n}\n\nfunction uploadImages(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function uploadImages$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return call(uploadImagesAPI, action.data);\n\n        case 3:\n          result = _context13.sent;\n          _context13.next = 6;\n          return put({\n            type: UPLOAD_IMAGES_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context13.next = 13;\n          break;\n\n        case 8:\n          _context13.prev = 8;\n          _context13.t0 = _context13[\"catch\"](0);\n          console.error(_context13.t0);\n          _context13.next = 13;\n          return put({\n            type: UPLOAD_IMAGES_FAILURE,\n            error: _context13.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[0, 8]]);\n}\n\nfunction watchUploadImages() {\n  return _regeneratorRuntime.wrap(function watchUploadImages$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction likePostAPI(postId) {\n  return axios.post(\"http://localhost:3065/api/post/\".concat(postId, \"/like\"), {}, {\n    withCredentials: true\n  });\n}\n\nfunction likePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function likePost$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          _context15.next = 3;\n          return call(likePostAPI, action.data);\n\n        case 3:\n          result = _context15.sent;\n          _context15.next = 6;\n          return put({\n            type: LIKE_POST_SUCCESS,\n            data: {\n              postId: action.data,\n              userId: result.data.userId\n            }\n          });\n\n        case 6:\n          _context15.next = 13;\n          break;\n\n        case 8:\n          _context15.prev = 8;\n          _context15.t0 = _context15[\"catch\"](0);\n          console.error(_context15.t0);\n          _context15.next = 13;\n          return put({\n            type: LIKE_POST_FAILURE,\n            error: _context15.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15, null, [[0, 8]]);\n}\n\nfunction watchLikePost() {\n  return _regeneratorRuntime.wrap(function watchLikePost$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeLatest(LIKE_POST_REQUEST, likePost);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction unlikePostAPI(postId) {\n  return axios[\"delete\"](\"http://localhost:3065/api/post/\".concat(postId, \"/unlike\"), {\n    withCredentials: true\n  });\n}\n\nfunction unlikePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unlikePost$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.prev = 0;\n          _context17.next = 3;\n          return call(unlikePostAPI, action.data);\n\n        case 3:\n          result = _context17.sent;\n          _context17.next = 6;\n          return put({\n            type: UNLIKE_POST_SUCCESS,\n            data: {\n              postId: action.data,\n              userId: result.data.userId\n            }\n          });\n\n        case 6:\n          _context17.next = 13;\n          break;\n\n        case 8:\n          _context17.prev = 8;\n          _context17.t0 = _context17[\"catch\"](0);\n          console.error(_context17.t0);\n          _context17.next = 13;\n          return put({\n            type: UNLIKE_POST_FAILURE,\n            error: _context17.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17, null, [[0, 8]]);\n}\n\nfunction watchUnlikePost() {\n  return _regeneratorRuntime.wrap(function watchUnlikePost$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nfunction retweetAPI(postId) {\n  return axios.post(\"http://localhost:3065/api/post/\".concat(postId, \"/retweet\"), {}, {\n    withCredentials: true\n  });\n}\n\nfunction retweet(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function retweet$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.prev = 0;\n          _context19.next = 3;\n          return call(retweetAPI, action.data);\n\n        case 3:\n          result = _context19.sent;\n          _context19.next = 6;\n          return put({\n            type: RETWEET_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context19.next = 14;\n          break;\n\n        case 8:\n          _context19.prev = 8;\n          _context19.t0 = _context19[\"catch\"](0);\n          console.error(_context19.t0);\n          _context19.next = 13;\n          return put({\n            type: RETWEET_FAILURE,\n            error: _context19.t0\n          });\n\n        case 13:\n          alert(_context19.t0.response && _context19.t0.response.data);\n\n        case 14:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19, null, [[0, 8]]);\n}\n\nfunction watchRetweet() {\n  return _regeneratorRuntime.wrap(function watchRetweet$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.next = 2;\n          return takeLatest(RETWEET_REQUEST, retweet);\n\n        case 2:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked20);\n}\n\nfunction removePostAPI(postId) {\n  console.log(postId);\n  return axios[\"delete\"](\"http://localhost:3065/api/post/\".concat(postId), {\n    withCredentials: true\n  });\n}\n\nfunction removePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removePost$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.prev = 0;\n          _context21.next = 3;\n          return call(removePostAPI, action.data);\n\n        case 3:\n          result = _context21.sent;\n          _context21.next = 6;\n          return put({\n            type: REMOVE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context21.next = 13;\n          break;\n\n        case 8:\n          _context21.prev = 8;\n          _context21.t0 = _context21[\"catch\"](0);\n          console.error(_context21.t0);\n          _context21.next = 13;\n          return put({\n            type: REMOVE_POST_FAILURE,\n            error: _context21.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _marked21, null, [[0, 8]]);\n}\n\nfunction watchRemovePost() {\n  return _regeneratorRuntime.wrap(function watchRemovePost$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          _context22.next = 2;\n          return takeLatest(REMOVE_POST_REQUEST, removePost);\n\n        case 2:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, _marked22);\n}\n\nfunction loadPostAPI(postId) {\n  console.log(postId);\n  return axios.get(\"http://localhost:3065/api/post/\".concat(postId));\n}\n\nfunction loadPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPost$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          _context23.prev = 0;\n          _context23.next = 3;\n          return call(loadPostAPI, action.data);\n\n        case 3:\n          result = _context23.sent;\n          _context23.next = 6;\n          return put({\n            type: LOAD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context23.next = 13;\n          break;\n\n        case 8:\n          _context23.prev = 8;\n          _context23.t0 = _context23[\"catch\"](0);\n          console.error(_context23.t0);\n          _context23.next = 13;\n          return put({\n            type: LOAD_POST_FAILURE,\n            error: _context23.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, _marked23, null, [[0, 8]]);\n}\n\nfunction watchLoadPost() {\n  return _regeneratorRuntime.wrap(function watchLoadPost$(_context24) {\n    while (1) {\n      switch (_context24.prev = _context24.next) {\n        case 0:\n          _context24.next = 2;\n          return takeLatest(LOAD_POST_REQUEST, loadPost);\n\n        case 2:\n        case \"end\":\n          return _context24.stop();\n      }\n    }\n  }, _marked24);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context25) {\n    while (1) {\n      switch (_context25.prev = _context25.next) {\n        case 0:\n          _context25.next = 2;\n          return all([fork(watchAddPost), fork(watchAddComment), fork(watchLoadComments), fork(watchMainLoadPosts), fork(watchLoadHashtagPosts), fork(watchLoadUserPosts), fork(watchUploadImages), fork(watchLikePost), fork(watchUnlikePost), fork(watchRetweet), fork(watchRemovePost), fork(watchLoadPost)]);\n\n        case 2:\n        case \"end\":\n          return _context25.stop();\n      }\n    }\n  }, _marked25);\n}","map":{"version":3,"sources":["C:/ReactNodeBird/Front/sagas/post.js"],"names":["appPost","watchAddPost","loadMainPosts","watchMainLoadPosts","loadUserPosts","watchLoadUserPosts","loadHashtagPosts","watchLoadHashtagPosts","addComment","watchAddComment","loadComments","watchLoadComments","uploadImages","watchUploadImages","likePost","watchLikePost","unlikePost","watchUnlikePost","retweet","watchRetweet","removePost","watchRemovePost","loadPost","watchLoadPost","userSaga","put","all","fork","takeLatest","delay","call","throttle","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","UNLIKE_POST_FAILURE","UNLIKE_POST_SUCCESS","UNLIKE_POST_REQUEST","LIKE_POST_REQUEST","LIKE_POST_FAILURE","LIKE_POST_SUCCESS","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","axios","addPostAPI","postData","post","withCredentials","action","data","result","type","error","loadMainPostsAPI","lastId","limit","get","loadUserPostsAPI","id","loadHashtagPostsAPI","tag","encodeURIComponent","addCommentAPI","postId","content","comment","console","loadCommentsAPI","comments","uploadImagesAPI","formData","likePostAPI","userId","unlikePostAPI","retweetAPI","alert","response","removePostAPI","log","loadPostAPI"],"mappings":"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","sourcesContent":["import {put, all, fork,takeLatest,delay,call,throttle } from 'redux-saga/effects';\r\nimport { \r\n  ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE ,\r\n  ADD_COMMENT_FAILURE,ADD_COMMENT_REQUEST,ADD_COMMENT_SUCCESS, \r\n  LOAD_MAIN_POSTS_SUCCESS, LOAD_MAIN_POSTS_REQUEST, LOAD_MAIN_POSTS_FAILURE, \r\n  LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, \r\n  LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_COMMENTS_REQUEST, LOAD_COMMENTS_SUCCESS, LOAD_COMMENTS_FAILURE, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, \r\n  UNLIKE_POST_FAILURE,UNLIKE_POST_SUCCESS,UNLIKE_POST_REQUEST,LIKE_POST_REQUEST,LIKE_POST_FAILURE,LIKE_POST_SUCCESS, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE, REMOVE_POST_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE,\r\n} from '../Reducer/post';\r\nimport axios from 'axios';\r\n\r\nfunction addPostAPI (postData) {\r\n  return axios.post('http://localhost:3065/api/post',postData,{\r\n    withCredentials:true,\r\n  })\r\n}\r\n\r\nfunction* appPost(action){\r\n  try{\r\n    const result = yield call(addPostAPI,action.data)\r\n    yield put({\r\n      type:ADD_POST_SUCCESS,\r\n      data:result.data,\r\n    })\r\n  }catch(e){\r\n    yield put({\r\n      type:ADD_POST_FAILURE,\r\n      error:e\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchAddPost(){\r\n  yield takeLatest(ADD_POST_REQUEST,appPost);\r\n}\r\nfunction loadMainPostsAPI (lastId = 0,limit = 10) {\r\n  return axios.get(`http://localhost:3065/api/posts?lastId=${lastId}&limit=${limit}`)\r\n\r\n}\r\n\r\nfunction* loadMainPosts(action){\r\n  try{\r\n    const result = yield call(loadMainPostsAPI,action.lastId);\r\n    yield put({\r\n      type:LOAD_MAIN_POSTS_SUCCESS,\r\n      data: result.data\r\n    })\r\n  }catch(e){\r\n    yield put({\r\n      type:LOAD_MAIN_POSTS_FAILURE,\r\n      error:e\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchMainLoadPosts(){\r\n  yield throttle(2000,LOAD_MAIN_POSTS_REQUEST,loadMainPosts);\r\n}\r\nfunction loadUserPostsAPI (id) {\r\n  return axios.get(`http://localhost:3065/api/user/${id}/posts`)\r\n\r\n}\r\n\r\nfunction* loadUserPosts(action){\r\n  try{\r\n    const result = yield call(loadUserPostsAPI,action.data);\r\n    yield put({\r\n      type:LOAD_USER_POSTS_SUCCESS,\r\n      data: result.data\r\n    })\r\n  }catch(e){\r\n    yield put({\r\n      type:LOAD_USER_POSTS_FAILURE,\r\n      error:e\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchLoadUserPosts(){\r\n  yield takeLatest(LOAD_USER_POSTS_REQUEST,loadUserPosts);\r\n}\r\nfunction loadHashtagPostsAPI (tag,lastId) {\r\n  return axios.get(`http://localhost:3065/api/hashtag/${encodeURIComponent(tag)}?lastId=${lastId}&limit=10`)\r\n\r\n}\r\n\r\nfunction* loadHashtagPosts(action){\r\n  try{\r\n    const result = yield call(loadHashtagPostsAPI,action.data,action.lastId);\r\n    yield put({\r\n      type:LOAD_HASHTAG_POSTS_SUCCESS,\r\n      data: result.data,\r\n    })\r\n  }catch(e){\r\n    yield put({\r\n      type:LOAD_HASHTAG_POSTS_FAILURE,\r\n      error:e\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchLoadHashtagPosts(){\r\n  yield throttle(2000,LOAD_HASHTAG_POSTS_REQUEST,loadHashtagPosts);\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`http://localhost:3065/api/posts/${data.postId}/comment`, { content: data.content }, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: {\r\n        postId: action.data.postId,\r\n        comment: result.data,\r\n      },\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nfunction loadCommentsAPI(postId) {\r\n  return axios.get(`http://localhost:3065/api/posts/${postId}/comments`);\r\n}\r\n\r\nfunction* loadComments(action) {\r\n  try {\r\n    const result = yield call(loadCommentsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_COMMENTS_SUCCESS,\r\n      data: {\r\n        postId: action.data,\r\n        comments: result.data,\r\n      },\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_COMMENTS_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadComments() {\r\n  yield takeLatest(LOAD_COMMENTS_REQUEST, loadComments);\r\n}\r\nfunction uploadImagesAPI(formData) {\r\n  return axios.post(`http://localhost:3065/api/post/images`,formData,{\r\n    withCredentials:true\r\n  });\r\n}\r\n\r\nfunction* uploadImages(action) {\r\n  try {\r\n    const result = yield call(uploadImagesAPI, action.data);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchUploadImages() {\r\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\n\r\nfunction likePostAPI(postId) {\r\n  return axios.post(`http://localhost:3065/api/post/${postId}/like`,{},{\r\n    withCredentials:true\r\n  });\r\n}\r\n\r\nfunction* likePost(action) {\r\n  try {\r\n    const result = yield call(likePostAPI, action.data);\r\n    yield put({\r\n      type: LIKE_POST_SUCCESS,\r\n      data: {\r\n        postId:action.data,\r\n        userId:result.data.userId\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\nfunction unlikePostAPI(postId) {\r\n  return axios.delete(`http://localhost:3065/api/post/${postId}/unlike`,{\r\n    withCredentials:true\r\n  });\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result = yield call(unlikePostAPI, action.data);\r\n    yield put({\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data: {\r\n        postId:action.data,\r\n        userId:result.data.userId\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchUnlikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\nfunction retweetAPI(postId) {\r\n  return axios.post(`http://localhost:3065/api/post/${postId}/retweet`,{},{\r\n    withCredentials:true\r\n  });\r\n}\r\n\r\nfunction* retweet(action) {\r\n  try {\r\n    const result = yield call(retweetAPI, action.data);\r\n    yield put({\r\n      type: RETWEET_SUCCESS,\r\n      data:result.data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: RETWEET_FAILURE,\r\n      error: e,\r\n    });\r\n    alert(e.response && e.response.data);\r\n  }\r\n}\r\n\r\nfunction* watchRetweet() {\r\n  yield takeLatest(RETWEET_REQUEST, retweet);\r\n}\r\nfunction removePostAPI(postId) {\r\n  console.log(postId)\r\n  return axios.delete(`http://localhost:3065/api/post/${postId}`,{\r\n    withCredentials:true\r\n  });\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result = yield call(removePostAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data:result.data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\nfunction loadPostAPI(postId) {\r\n  console.log(postId)\r\n  return axios.get(`http://localhost:3065/api/post/${postId}`);\r\n}\r\n\r\nfunction* loadPost(action) {\r\n  try {\r\n    const result = yield call(loadPostAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POST_SUCCESS,\r\n      data:result.data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadPost() {\r\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n      fork(watchAddPost),\r\n      fork(watchAddComment),\r\n      fork(watchLoadComments),\r\n      fork(watchMainLoadPosts),\r\n      fork(watchLoadHashtagPosts),\r\n      fork(watchLoadUserPosts),\r\n      fork(watchUploadImages),\r\n      fork(watchLikePost),\r\n      fork(watchUnlikePost),\r\n      fork(watchRetweet),\r\n      fork(watchRemovePost),\r\n      fork(watchLoadPost),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../Reducer/post\";\nimport PostCard from '../components/PostCard';\nimport { Card, Avatar } from \"antd\";\nimport { LOAD_USER_REQUEST } from \"../Reducer/user\";\n\nconst User = ({\n  id\n}) => {\n  console.loglog(id);\n  const dispatch = useDispatch();\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  const {\n    userInfo,\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_USER_REQUEST,\n      data: id\n    });\n    dispatch({\n      type: LOAD_USER_POSTS_REQUEST,\n      data: id\n    });\n  }, []);\n  return __jsx(\"div\", null, userInfo ? __jsx(Card, {\n    actions: [__jsx(\"div\", {\n      key: \"twit\"\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", null), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\"\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", null), userInfo.Followings), __jsx(\"div\", {\n      key: \"follower\"\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", null), userInfo.Followers)]\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, null, userInfo.nickname[0]),\n    title: userInfo.nickname\n  })) : null, mainPosts.map(c => __jsx(PostCard, {\n    key: +c.createdAt,\n    post: c\n  })));\n};\n\nUser.getInitialProps = async context => {\n  console.log(\"hashTag getInitialProps\", context.query.id);\n  console.log(context.query.id);\n  return {\n    id: parseInt(context.query.id, 10)\n  };\n};\n\nexport default User;","map":{"version":3,"sources":["C:/ReactNodeBird/Front/pages/user.js"],"names":["React","useEffect","useDispatch","useSelector","LOAD_USER_POSTS_REQUEST","PostCard","Card","Avatar","LOAD_USER_REQUEST","User","id","console","loglog","dispatch","mainPosts","state","post","userInfo","me","user","type","data","Posts","Followings","Followers","nickname","map","c","createdAt","getInitialProps","context","log","query","parseInt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,uBAAT,QAAwC,iBAAxC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;;AAGA,MAAMC,IAAI,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAAc;AACzBC,EAAAA,OAAO,CAACC,MAAR,CAAeF,EAAf;AACE,QAAMG,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAgBX,WAAW,CAACY,KAAK,IAAEA,KAAK,CAACC,IAAd,CAAjC;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAWC,IAAAA;AAAX,MAAkBf,WAAW,CAACY,KAAK,IAAEA,KAAK,CAACI,IAAd,CAAnC;AAEAlB,EAAAA,SAAS,CAAC,MAAI;AACVY,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAACZ,iBADA;AAELa,MAAAA,IAAI,EAACX;AAFA,KAAD,CAAR;AAIAG,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAChB,uBADA;AAELiB,MAAAA,IAAI,EAACX;AAFA,KAAD,CAAR;AAIH,GATQ,EASP,EATO,CAAT;AAUA,SACI,mBACKO,QAAQ,GAAI,MAAC,IAAD;AACb,IAAA,OAAO,EAAE,CACP;AAAK,MAAA,GAAG,EAAC;AAAT,uBAEE,iBAFF,EAGGA,QAAQ,CAACK,KAHZ,CADO,EAMP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,iBAFF,EAGGL,QAAQ,CAACM,UAHZ,CANO,EAWP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,iBAFF,EAGGN,QAAQ,CAACO,SAHZ,CAXO;AADI,KAmBX,MAAC,IAAD,CAAM,IAAN;AACF,IAAA,MAAM,EAAE,MAAC,MAAD,QAASP,QAAQ,CAACQ,QAAT,CAAkB,CAAlB,CAAT,CADN;AAEF,IAAA,KAAK,EAAIR,QAAQ,CAACQ;AAFhB,IAnBW,CAAJ,GAwBP,IAzBN,EA0BCX,SAAS,CAACY,GAAV,CAAcC,CAAC,IACZ,MAAC,QAAD;AAAW,IAAA,GAAG,EAAE,CAACA,CAAC,CAACC,SAAnB;AAA8B,IAAA,IAAI,EAAED;AAApC,IADH,CA1BD,CADJ;AA+BH,CA/CD;;AAiDAlB,IAAI,CAACoB,eAAL,GAAuB,MAAMC,OAAN,IAAiB;AACtCnB,EAAAA,OAAO,CAACoB,GAAR,CAAY,yBAAZ,EAAuCD,OAAO,CAACE,KAAR,CAActB,EAArD;AACAC,EAAAA,OAAO,CAACoB,GAAR,CAAYD,OAAO,CAACE,KAAR,CAActB,EAA1B;AACA,SAAO;AAAEA,IAAAA,EAAE,EAAEuB,QAAQ,CAACH,OAAO,CAACE,KAAR,CAActB,EAAf,EAAmB,EAAnB;AAAd,GAAP;AACD,CAJD;;AAMA,eAAeD,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOAD_USER_POSTS_REQUEST } from \"../Reducer/post\";\r\nimport PostCard from '../components/PostCard';\r\nimport { Card, Avatar } from \"antd\";\r\nimport { LOAD_USER_REQUEST } from \"../Reducer/user\";\r\n\r\n\r\nconst User = ( { id } ) => {\r\n  console.loglog(id)\r\n    const dispatch = useDispatch();\r\n    const { mainPosts } = useSelector(state=>state.post);\r\n    const { userInfo,me } = useSelector(state=>state.user);\r\n\r\n    useEffect(()=>{\r\n        dispatch({\r\n            type:LOAD_USER_REQUEST,\r\n            data:id,\r\n        })\r\n        dispatch({\r\n            type:LOAD_USER_POSTS_REQUEST,\r\n            data:id\r\n        })\r\n    },[])\r\n    return(\r\n        <div>\r\n            {userInfo ? (<Card\r\n            actions={[\r\n              <div key=\"twit\">\r\n                짹짹\r\n                <br />\r\n                {userInfo.Posts}\r\n              </div>,\r\n              <div key=\"following\">\r\n                팔로잉\r\n                <br />\r\n                {userInfo.Followings}\r\n              </div>,\r\n              <div key=\"follower\">\r\n                팔로워\r\n                <br />\r\n                {userInfo.Followers}\r\n              </div>\r\n            ]}\r\n          >\r\n              <Card.Meta \r\n            avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n            title = {userInfo.nickname}  \r\n              />\r\n              </Card>)\r\n            : null}\r\n        {mainPosts.map(c=>(\r\n            <PostCard  key={+c.createdAt} post={c} />\r\n        ))}\r\n      </div>);\r\n};\r\n\r\nUser.getInitialProps = async context => {\r\n  console.log(\"hashTag getInitialProps\", context.query.id);\r\n  console.log(context.query.id)\r\n  return { id: parseInt(context.query.id, 10) };\r\n};\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}
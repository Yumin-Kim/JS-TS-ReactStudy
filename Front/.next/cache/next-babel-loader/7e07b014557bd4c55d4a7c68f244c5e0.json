{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../Reducer/post\";\nimport PostCard from \"../components/PostCard\";\n\nconst HashTag = ({\n  tag\n}) => {\n  const dispatch = useDispatch();\n  const {\n    mainPosts,\n    hasMorePost\n  } = useSelector(state => state.post);\n  const onScroll = useCallback(() => {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          lastId: mainPosts[mainPosts.length - 1].id,\n          data: tag\n        });\n      }\n    }\n  }, [hasMorePost, mainPosts.length]);\n  useEffect(() => {\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length]);\n  console.log(mainPosts);\n  return __jsx(\"div\", null, mainPosts.map(v => __jsx(\"p\", null, v.id)));\n};\n\nHashTag.getInitialProps = async context => {\n  const tag = context.query.tag;\n  console.log(\"hashTag getInitialProps\", context.query.tag);\n  context.store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: tag\n  });\n  return {\n    tag\n  };\n};\n\nexport default HashTag;","map":{"version":3,"sources":["C:/ReactNodeBird/Front/pages/hashtag.js"],"names":["React","useEffect","useDispatch","useSelector","LOAD_HASHTAG_POSTS_REQUEST","PostCard","HashTag","tag","dispatch","mainPosts","hasMorePost","state","post","onScroll","useCallback","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","console","log","map","v","getInitialProps","context","query","store"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,0BAAT,QAA2C,iBAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAC3B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,SAAF;AAAYC,IAAAA;AAAZ,MAA4BP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA7C;AAEA,QAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjC,QAAIC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACxG,UAAIV,WAAJ,EAAiB;AACfF,QAAAA,QAAQ,CAAC;AACPa,UAAAA,IAAI,EAAEjB,0BADC;AAEPkB,UAAAA,MAAM,EAAEb,SAAS,CAACA,SAAS,CAACc,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAFjC;AAGPC,UAAAA,IAAI,EAAElB;AAHC,SAAD,CAAR;AAKD;AACF;AACF,GAV2B,EAUzB,CAACG,WAAD,EAAcD,SAAS,CAACc,MAAxB,CAVyB,CAA5B;AAYAtB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCb,QAAlC;AACA,WAAO,MAAM;AACXE,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCd,QAArC;AACD,KAFD;AAGD,GALQ,EAKN,CAACJ,SAAS,CAACc,MAAX,CALM,CAAT;AAMAK,EAAAA,OAAO,CAACC,GAAR,CAAYpB,SAAZ;AACA,SACE,mBACGA,SAAS,CAACqB,GAAV,CAAcC,CAAC,IAAE,iBAAIA,CAAC,CAACP,EAAN,CAAjB,CADH,CADF;AAQD,CA/BD;;AAiCAlB,OAAO,CAAC0B,eAAR,GAA0B,MAAMC,OAAN,IAAiB;AACzC,QAAM1B,GAAG,GAAG0B,OAAO,CAACC,KAAR,CAAc3B,GAA1B;AACAqB,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCI,OAAO,CAACC,KAAR,CAAc3B,GAArD;AACA0B,EAAAA,OAAO,CAACE,KAAR,CAAc3B,QAAd,CAAuB;AACrBa,IAAAA,IAAI,EAAEjB,0BADe;AAErBqB,IAAAA,IAAI,EAAElB;AAFe,GAAvB;AAIA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CARD;;AAUA,eAAeD,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../Reducer/post\";\r\nimport PostCard from \"../components/PostCard\";\r\n\r\nconst HashTag = ({ tag }) => {\r\n  const dispatch = useDispatch();\r\n  const { mainPosts,hasMorePost } = useSelector(state => state.post);\r\n\r\n  const onScroll = useCallback(() => {\r\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n      if (hasMorePost) {\r\n        dispatch({\r\n          type: LOAD_HASHTAG_POSTS_REQUEST,\r\n          lastId: mainPosts[mainPosts.length - 1].id,\r\n          data: tag,\r\n        });\r\n      }\r\n    }\r\n  }, [hasMorePost, mainPosts.length]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts.length]);\r\n  console.log(mainPosts)\r\n  return (\r\n    <div>\r\n      {mainPosts.map(v=><p>{v.id}</p>)}\r\n      {/* {mainPosts.map(c => (\r\n        <PostCard key={+c.createdAt} post={c} />\r\n      ))} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nHashTag.getInitialProps = async context => {\r\n  const tag = context.query.tag;\r\n  console.log(\"hashTag getInitialProps\", context.query.tag);\r\n  context.store.dispatch({\r\n    type: LOAD_HASHTAG_POSTS_REQUEST,\r\n    data: tag\r\n  });\r\n  return { tag };\r\n};\r\n\r\nexport default HashTag;\r\n"]},"metadata":{},"sourceType":"module"}
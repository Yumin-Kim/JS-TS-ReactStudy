{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../Reducer/post\";\nimport PostCard from \"../components/PostCard\";\n\nvar HashTag = function HashTag(_ref) {\n  var tag = _ref.tag;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePost = _useSelector.hasMorePost;\n\n  var onScoll = function onScoll() {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          lastId: mainPosts[mainPosts.length - 1].id,\n          data: tag\n        });\n      }\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"scroll\", onScoll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScoll);\n    };\n  }, [mainPosts.length]);\n  return __jsx(\"div\", null, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: +c.createdAt,\n      post: c\n    });\n  }));\n};\n\nHashTag.getInitialProps = function _callee(context) {\n  var tag;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          tag = context.query.tag;\n          console.log('asdasd');\n          console.log(\"hashTag getInitialProps\", context.query.tag);\n          context.store.dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            data: tag\n          });\n          return _context.abrupt(\"return\", {\n            tag: tag\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default HashTag;","map":{"version":3,"sources":["C:/ReactNodeBird/Front/pages/hashtag.js"],"names":["React","useEffect","useDispatch","useSelector","LOAD_HASHTAG_POSTS_REQUEST","PostCard","HashTag","tag","dispatch","state","post","mainPosts","hasMorePost","onScoll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map","c","createdAt","getInitialProps","context","query","console","log","store"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,0BAAT,QAA2C,iBAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAC3B,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAD2B,qBAEOC,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFlB;AAAA,MAEnBC,SAFmB,gBAEnBA,SAFmB;AAAA,MAETC,WAFS,gBAETA,WAFS;;AAI3B,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,QACEC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,UAAIP,WAAJ,EAAiB;AACfJ,QAAAA,QAAQ,CAAC;AACPY,UAAAA,IAAI,EAAEhB,0BADC;AAEPiB,UAAAA,MAAM,EAAEV,SAAS,CAACA,SAAS,CAACW,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAFjC;AAGPC,UAAAA,IAAI,EAACjB;AAHE,SAAD,CAAR;AAKD;AACF;AACF,GAbD;;AAeAN,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCZ,OAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCb,OAArC;AACD,KAFD;AAGD,GALQ,EAKN,CAACF,SAAS,CAACW,MAAX,CALM,CAAT;AAOA,SACE,mBACGX,SAAS,CAACgB,GAAV,CAAc,UAAAC,CAAC;AAAA,WACd,MAAC,QAAD;AAAU,MAAA,GAAG,EAAE,CAACA,CAAC,CAACC,SAAlB;AAA6B,MAAA,IAAI,EAAED;AAAnC,MADc;AAAA,GAAf,CADH,CADF;AAOD,CAjCD;;AAmCAtB,OAAO,CAACwB,eAAR,GAA0B,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBxB,UAAAA,GADkB,GACZwB,OAAO,CAACC,KAAR,CAAczB,GADF;AAExB0B,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCH,OAAO,CAACC,KAAR,CAAczB,GAArD;AACAwB,UAAAA,OAAO,CAACI,KAAR,CAAc3B,QAAd,CAAuB;AACrBY,YAAAA,IAAI,EAAEhB,0BADe;AAErBoB,YAAAA,IAAI,EAAEjB;AAFe,WAAvB;AAJwB,2CAQjB;AAAEA,YAAAA,GAAG,EAAHA;AAAF,WARiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAWA,eAAeD,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../Reducer/post\";\r\nimport PostCard from \"../components/PostCard\";\r\n\r\nconst HashTag = ({ tag }) => {\r\n  const dispatch = useDispatch();\r\n  const { mainPosts,hasMorePost } = useSelector(state => state.post);\r\n\r\n  const onScoll = () => {\r\n    if (\r\n      window.scrollY + document.documentElement.clientHeight >\r\n      document.documentElement.scrollHeight - 300\r\n    ) {\r\n      if (hasMorePost) {\r\n        dispatch({\r\n          type: LOAD_HASHTAG_POSTS_REQUEST,\r\n          lastId: mainPosts[mainPosts.length - 1].id,\r\n          data:tag\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", onScoll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScoll);\r\n    };\r\n  }, [mainPosts.length]);\r\n\r\n  return (\r\n    <div>\r\n      {mainPosts.map(c => (\r\n        <PostCard key={+c.createdAt} post={c} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nHashTag.getInitialProps = async context => {\r\n  const tag = context.query.tag;\r\n  console.log('asdasd')\r\n  console.log(\"hashTag getInitialProps\", context.query.tag);\r\n  context.store.dispatch({\r\n    type: LOAD_HASHTAG_POSTS_REQUEST,\r\n    data: tag\r\n  });\r\n  return { tag };\r\n};\r\n\r\nexport default HashTag;\r\n"]},"metadata":{},"sourceType":"module"}
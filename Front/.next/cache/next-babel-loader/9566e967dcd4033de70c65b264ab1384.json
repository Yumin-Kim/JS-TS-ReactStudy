{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(login),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(wwatchLogin),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, call, put, takeLatest, fork } from 'redux-saga/effects';\nimport { LOG_IN } from '../Reducer/user';\n\nfunction loginAPI() {}\n\nfunction login() {\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginAPI);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS\n          });\n\n        case 5:\n          _context.next = 12;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 12;\n          return put({\n            type: LOG_IN_FAIL\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction wwatchLogin() {\n  return _regeneratorRuntime.wrap(function wwatchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(LOG_IN, login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(wwatchLogin)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/ReactNodeBird/Front/sagas/user.js"],"names":["login","wwatchLogin","userSaga","all","call","put","takeLatest","fork","LOG_IN","loginAPI","type","LOG_IN_SUCCESS","console","log","LOG_IN_FAIL"],"mappings":";;;;yBAOUA,K;;;yBAcAC,W;;;yBAIeC,Q;;AAzBzB,SAASC,GAAT,EAAcC,IAAd,EAAmBC,GAAnB,EAAuBC,UAAvB,EAAmCC,IAAnC,QAA+C,oBAA/C;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,SAASC,QAAT,GAAmB,CAElB;;AAED,SAAUT,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMI,IAAI,CAACK,QAAD,CAAV;;AAFR;AAAA;AAGQ,iBAAMJ,GAAG,CAAC;AACNK,YAAAA,IAAI,EAACC;AADC,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOQC,UAAAA,OAAO,CAACC,GAAR;AAPR;AAQQ,iBAAMR,GAAG,CAAC;AACNK,YAAAA,IAAI,EAACI;AADC,WAAD,CAAT;;AARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAUb,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMK,UAAU,CAACE,MAAD,EAAQR,KAAR,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNI,IAAI,CAACN,WAAD,CADE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all ,call,put,takeLatest, fork } from 'redux-saga/effects';\r\nimport { LOG_IN } from '../Reducer/user';\r\n\r\nfunction loginAPI(){\r\n\r\n}\r\n\r\nfunction* login(){\r\n    try{\r\n        yield call(loginAPI);\r\n        yield put({\r\n            type:LOG_IN_SUCCESS\r\n        })\r\n    }catch(e){\r\n        console.log(e)\r\n        yield put({\r\n            type:LOG_IN_FAIL\r\n        })\r\n    }\r\n}\r\n\r\nfunction* wwatchLogin(){\r\n    yield takeLatest(LOG_IN,login)\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(wwatchLogin)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}
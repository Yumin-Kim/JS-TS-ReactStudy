{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../Reducer/post\";\nimport PostCard from '../components/PostCard';\nimport { Card, Avatar } from \"antd\";\nimport { LOAD_USER_REQUEST } from \"../Reducer/user\";\n\nvar User = function User(_ref) {\n  var id = _ref.id;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo,\n      me = _useSelector2.me;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_USER_REQUEST,\n      data: id\n    });\n    dispatch({\n      type: LOAD_USER_POSTS_REQUEST,\n      data: id\n    });\n  }, []);\n  return __jsx(\"div\", null, userInfo ? __jsx(Card, {\n    actions: [__jsx(\"div\", {\n      key: \"twit\"\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", null), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\"\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", null), userInfo.Followings), __jsx(\"div\", {\n      key: \"follower\"\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", null), userInfo.Followers)]\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, null, userInfo.nickname[0])\n  })) : null, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: +c.createdAt,\n      post: c\n    });\n  }));\n};\n\nUser.getInitialProps = function _callee(context) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(\"hashTag getInitialProps\", context.query.id);\n          return _context.abrupt(\"return\", {\n            id: _parseInt(context.query.id, 10)\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default User;","map":{"version":3,"sources":["c:/ReactNodeBird/Front/pages/user.js"],"names":["React","useEffect","useDispatch","useSelector","LOAD_USER_POSTS_REQUEST","PostCard","Card","Avatar","LOAD_USER_REQUEST","User","id","dispatch","state","post","mainPosts","user","userInfo","me","type","data","Posts","Followings","Followers","nickname","map","c","createdAt","getInitialProps","context","console","log","query"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,uBAAT,QAAwC,iBAAxC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAc;AAAA,MAAVC,EAAU,QAAVA,EAAU;AACvB,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AADuB,qBAEDC,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAEA,KAAK,CAACC,IAAR;AAAA,GAAN,CAFV;AAAA,MAEfC,SAFe,gBAEfA,SAFe;;AAAA,sBAGCX,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAEA,KAAK,CAACG,IAAR;AAAA,GAAN,CAHZ;AAAA,MAGfC,QAHe,iBAGfA,QAHe;AAAA,MAGNC,EAHM,iBAGNA,EAHM;;AAKvBhB,EAAAA,SAAS,CAAC,YAAI;AACVU,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAACV,iBADA;AAELW,MAAAA,IAAI,EAACT;AAFA,KAAD,CAAR;AAIAC,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAACd,uBADA;AAELe,MAAAA,IAAI,EAACT;AAFA,KAAD,CAAR;AAIH,GATQ,EASP,EATO,CAAT;AAUA,SACI,mBACKM,QAAQ,GAAI,MAAC,IAAD;AACb,IAAA,OAAO,EAAE,CACP;AAAK,MAAA,GAAG,EAAC;AAAT,uBAEE,iBAFF,EAGGA,QAAQ,CAACI,KAHZ,CADO,EAMP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,iBAFF,EAGGJ,QAAQ,CAACK,UAHZ,CANO,EAWP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,iBAFF,EAGGL,QAAQ,CAACM,SAHZ,CAXO;AADI,KAmBX,MAAC,IAAD,CAAM,IAAN;AACF,IAAA,MAAM,EAAE,MAAC,MAAD,QAASN,QAAQ,CAACO,QAAT,CAAkB,CAAlB,CAAT;AADN,IAnBW,CAAJ,GAuBP,IAxBN,EAyBCT,SAAS,CAACU,GAAV,CAAc,UAAAC,CAAC;AAAA,WACZ,MAAC,QAAD;AAAW,MAAA,GAAG,EAAE,CAACA,CAAC,CAACC,SAAnB;AAA8B,MAAA,IAAI,EAAED;AAApC,MADY;AAAA,GAAf,CAzBD,CADJ;AA8BH,CA7CD;;AA+CAhB,IAAI,CAACkB,eAAL,GAAuB,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,OAAO,CAACG,KAAR,CAAcrB,EAArD;AADqB,2CAEd;AAAEA,YAAAA,EAAE,EAAE,UAASkB,OAAO,CAACG,KAAR,CAAcrB,EAAvB,EAA2B,EAA3B;AAAN,WAFc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAKA,eAAeD,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOAD_USER_POSTS_REQUEST } from \"../Reducer/post\";\r\nimport PostCard from '../components/PostCard';\r\nimport { Card, Avatar } from \"antd\";\r\nimport { LOAD_USER_REQUEST } from \"../Reducer/user\";\r\n\r\n\r\nconst User = ( { id } ) => {\r\n    const dispatch = useDispatch();\r\n    const { mainPosts } = useSelector(state=>state.post);\r\n    const { userInfo,me } = useSelector(state=>state.user);\r\n\r\n    useEffect(()=>{\r\n        dispatch({\r\n            type:LOAD_USER_REQUEST,\r\n            data:id,\r\n        })\r\n        dispatch({\r\n            type:LOAD_USER_POSTS_REQUEST,\r\n            data:id\r\n        })\r\n    },[])\r\n    return(\r\n        <div>\r\n            {userInfo ? (<Card\r\n            actions={[\r\n              <div key=\"twit\">\r\n                짹짹\r\n                <br />\r\n                {userInfo.Posts}\r\n              </div>,\r\n              <div key=\"following\">\r\n                팔로잉\r\n                <br />\r\n                {userInfo.Followings}\r\n              </div>,\r\n              <div key=\"follower\">\r\n                팔로워\r\n                <br />\r\n                {userInfo.Followers}\r\n              </div>\r\n            ]}\r\n          >\r\n              <Card.Meta \r\n            avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n              />\r\n              </Card>)\r\n            : null}\r\n        {mainPosts.map(c=>(\r\n            <PostCard  key={+c.createdAt} post={c} />\r\n        ))}\r\n      </div>);\r\n};\r\n\r\nUser.getInitialProps = async context => {\r\n  console.log(\"hashTag getInitialProps\", context.query.id);\r\n  return { id: parseInt(context.query.id, 10) };\r\n};\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}
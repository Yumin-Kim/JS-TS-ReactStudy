{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../Reducer/post\";\nimport PostCard from \"../components/PostCard\";\nimport { Card, Avatar } from \"antd\";\nimport { LOAD_USER_REQUEST } from \"../Reducer/user\";\n\nconst User = ({\n  id\n}) => {\n  const dispatch = useDispatch();\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  const {\n    userInfo,\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {}, []);\n  return __jsx(\"div\", null, userInfo ? __jsx(Card, {\n    actions: [__jsx(\"div\", {\n      key: \"twit\"\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", null), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\"\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", null), userInfo.Followings), __jsx(\"div\", {\n      key: \"follower\"\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", null), userInfo.Followers)]\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, null, userInfo.nickname[0]),\n    title: userInfo.nickname\n  })) : null, mainPosts.map(c => __jsx(PostCard, {\n    key: +c.createdAt,\n    post: c\n  })));\n};\n\nUser.getInitialProps = async context => {\n  console.log(\"hashTag getInitialProps\", context.query.id);\n  const id = parseInt(context.query.id, 10);\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: id\n  });\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: id\n  });\n  return {\n    id\n  };\n};\n\nexport default User;","map":{"version":3,"sources":["C:/ReactNodeBird/Front/pages/user.js"],"names":["React","useEffect","useDispatch","useSelector","LOAD_USER_POSTS_REQUEST","PostCard","Card","Avatar","LOAD_USER_REQUEST","User","id","dispatch","mainPosts","state","post","userInfo","me","user","Posts","Followings","Followers","nickname","map","c","createdAt","getInitialProps","context","console","log","query","parseInt","store","type","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,uBAAT,QAAwC,iBAAxC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AACvB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAgBT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAjC;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAmBb,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACI,IAAhB,CAApC;AAEAhB,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AACA,SACE,mBACGc,QAAQ,GACP,MAAC,IAAD;AACE,IAAA,OAAO,EAAE,CACP;AAAK,MAAA,GAAG,EAAC;AAAT,uBAEE,iBAFF,EAGGA,QAAQ,CAACG,KAHZ,CADO,EAMP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,iBAFF,EAGGH,QAAQ,CAACI,UAHZ,CANO,EAWP;AAAK,MAAA,GAAG,EAAC;AAAT,6BAEE,iBAFF,EAGGJ,QAAQ,CAACK,SAHZ,CAXO;AADX,KAmBE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAE,MAAC,MAAD,QAASL,QAAQ,CAACM,QAAT,CAAkB,CAAlB,CAAT,CADV;AAEE,IAAA,KAAK,EAAEN,QAAQ,CAACM;AAFlB,IAnBF,CADO,GAyBL,IA1BN,EA2BGT,SAAS,CAACU,GAAV,CAAcC,CAAC,IACd,MAAC,QAAD;AAAU,IAAA,GAAG,EAAE,CAACA,CAAC,CAACC,SAAlB;AAA6B,IAAA,IAAI,EAAED;AAAnC,IADD,CA3BH,CADF;AAiCD,CAvCD;;AAyCAd,IAAI,CAACgB,eAAL,GAAuB,MAAMC,OAAN,IAAiB;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,OAAO,CAACG,KAAR,CAAcnB,EAArD;AACA,QAAMA,EAAE,GAAGoB,QAAQ,CAACJ,OAAO,CAACG,KAAR,CAAcnB,EAAf,EAAmB,EAAnB,CAAnB;AACAgB,EAAAA,OAAO,CAACK,KAAR,CAAcpB,QAAd,CAAuB;AACrBqB,IAAAA,IAAI,EAAExB,iBADe;AAErByB,IAAAA,IAAI,EAAEvB;AAFe,GAAvB;AAIAgB,EAAAA,OAAO,CAACK,KAAR,CAAcpB,QAAd,CAAuB;AACrBqB,IAAAA,IAAI,EAAE5B,uBADe;AAErB6B,IAAAA,IAAI,EAAEvB;AAFe,GAAvB;AAIA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAZD;;AAcA,eAAeD,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOAD_USER_POSTS_REQUEST } from \"../Reducer/post\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport { Card, Avatar } from \"antd\";\r\nimport { LOAD_USER_REQUEST } from \"../Reducer/user\";\r\n\r\nconst User = ({ id }) => {\r\n  const dispatch = useDispatch();\r\n  const { mainPosts } = useSelector(state => state.post);\r\n  const { userInfo, me } = useSelector(state => state.user);\r\n\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <div>\r\n      {userInfo ? (\r\n        <Card\r\n          actions={[\r\n            <div key=\"twit\">\r\n              짹짹\r\n              <br />\r\n              {userInfo.Posts}\r\n            </div>,\r\n            <div key=\"following\">\r\n              팔로잉\r\n              <br />\r\n              {userInfo.Followings}\r\n            </div>,\r\n            <div key=\"follower\">\r\n              팔로워\r\n              <br />\r\n              {userInfo.Followers}\r\n            </div>\r\n          ]}\r\n        >\r\n          <Card.Meta\r\n            avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n            title={userInfo.nickname}\r\n          />\r\n        </Card>\r\n      ) : null}\r\n      {mainPosts.map(c => (\r\n        <PostCard key={+c.createdAt} post={c} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nUser.getInitialProps = async context => {\r\n  console.log(\"hashTag getInitialProps\", context.query.id);\r\n  const id = parseInt(context.query.id, 10);\r\n  context.store.dispatch({\r\n    type: LOAD_USER_REQUEST,\r\n    data: id\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_POSTS_REQUEST,\r\n    data: id\r\n  });\r\n  return { id };\r\n};\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// export const initialState={\n//     mainPosts: [{\n//         User: {\n//             id: 1,\n//             nickname: 'dbals',\n//             content: '첫 번째 게시글',\n//             img: 'https://cdn.crowdpic.net/detail-thumb/thumb_d_FF1D6AD8B887EC2359A69C049ECA2A1D.jpg'\n//         },\n//         content: '첫 번째 게시글',\n//         img: 'https://cdn.crowdpic.net/detail-thumb/thumb_d_FF1D6AD8B887EC2359A69C049ECA2A1D.jpg'\n//     }],\n//     imagePaths: [],\n//     addPostErrorReason : false,\n//     isAddingPost: false,\n// };\nimport produce from 'immer';\nexport var initialState = {\n  mainPosts: [],\n  // 화면에 보일 포스트들\n  imagePaths: [],\n  // 미리보기 이미지 경로\n  addPostErrorReason: '',\n  // 포스트 업로드 실패 사유\n  isAddingPost: false,\n  // 포스트 업로드 중\n  postAdded: false,\n  // 포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false,\n  hasMorePost: false\n};\nexport var LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\nexport var LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\nexport var LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\nexport var LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport var LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport var LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport var LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport var LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport var LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\nexport var UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport var UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport var UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\nexport var LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\nexport var LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case UPLOAD_IMAGES_REQUEST:\n        {\n          break;\n        }\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          action.data.forEach(function (v) {\n            draft.imagePaths.push(v);\n          });\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        {\n          break;\n        }\n\n      case REMOVE_IMAGE:\n        {\n          return _objectSpread({}, state, {\n            imagePaths: state.imagePaths.filter(function (v, i) {\n              return i !== action.index;\n            })\n          });\n        }\n\n      case ADD_POST_REQUEST:\n        {\n          return _objectSpread({}, state, {\n            isAddingPost: true,\n            addPostErrorReason: '',\n            postAdded: false\n          });\n        }\n\n      case ADD_POST_SUCCESS:\n        {\n          return _objectSpread({}, state, {\n            isAddingPost: false,\n            mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts)),\n            postAdded: true,\n            imagePaths: []\n          });\n        }\n\n      case ADD_POST_FAILURE:\n        {\n          return _objectSpread({}, state, {\n            isAddingPost: false,\n            addPostErrorReason: action.error\n          });\n        }\n\n      case ADD_COMMENT_REQUEST:\n        {\n          return _objectSpread({}, state, {\n            isAddingComment: true,\n            addCommentErrorReason: '',\n            commentAdded: false\n          });\n        }\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var postIndex = state.mainPosts.findIndex(function (v) {\n            return v.id === action.data.postId;\n          });\n          var post = state.mainPosts[postIndex];\n          var Comments = [].concat(_toConsumableArray(post.Comments), [action.data.comment]);\n\n          var mainPosts = _toConsumableArray(state.mainPosts);\n\n          mainPosts[postIndex] = _objectSpread({}, post, {\n            Comments: Comments\n          });\n          return _objectSpread({}, state, {\n            isAddingComment: false,\n            mainPosts: mainPosts,\n            commentAdded: true\n          });\n        }\n\n      case ADD_COMMENT_FAILURE:\n        {\n          return _objectSpread({}, state, {\n            isAddingComment: false,\n            addCommentErrorReason: action.error\n          });\n        }\n\n      case LOAD_COMMENTS_SUCCESS:\n        {\n          var _postIndex = state.mainPosts.findIndex(function (v) {\n            return v.id === action.data.postId;\n          });\n\n          var _post = state.mainPosts[_postIndex];\n          var _Comments = action.data.comments;\n\n          var _mainPosts = _toConsumableArray(state.mainPosts);\n\n          _mainPosts[_postIndex] = _objectSpread({}, _post, {\n            Comments: _Comments\n          });\n          return _objectSpread({}, state, {\n            mainPosts: _mainPosts\n          });\n        }\n\n      case LOAD_MAIN_POSTS_REQUEST:\n      case LOAD_HASHTAG_POSTS_REQUEST:\n      case LOAD_USER_POSTS_REQUEST:\n        {\n          return _objectSpread({}, state, {\n            mainPosts: action.lastId === 0 ? [] : state.mainPosts,\n            hasMorePost: action.lastId ? state.hasMorePost : true\n          });\n        }\n\n      case LOAD_MAIN_POSTS_SUCCESS:\n      case LOAD_HASHTAG_POSTS_SUCCESS:\n      case LOAD_USER_POSTS_SUCCESS:\n        {\n          return _objectSpread({}, state, {\n            mainPosts: state.mainPosts.concat(action.data),\n            hasMorePost: action.data.length === 10\n          });\n        }\n\n      case LOAD_MAIN_POSTS_FAILURE:\n      case LOAD_HASHTAG_POSTS_FAILURE:\n      case LOAD_USER_POSTS_FAILURE:\n        {\n          return _objectSpread({}, state);\n        }\n\n      case LIKE_POST_REQUEST:\n        {\n          return _objectSpread({}, state);\n        }\n\n      case LIKE_POST_SUCCESS:\n        {\n          var _postIndex2 = state.mainPosts.findIndex(function (v) {\n            return v.id === action.data.postId;\n          });\n\n          var _post2 = state.mainPosts[_postIndex2];\n          var Likers = [{\n            id: action.data.userId\n          }].concat(_toConsumableArray(_post2.Likers));\n\n          var _mainPosts2 = _toConsumableArray(state.mainPosts);\n\n          _mainPosts2[_postIndex2] = _objectSpread({}, _post2, {\n            Likers: Likers\n          });\n          return _objectSpread({}, state, {\n            mainPosts: _mainPosts2\n          });\n        }\n\n      case LIKE_POST_FAILURE:\n        {\n          return _objectSpread({}, state);\n        }\n\n      case UNLIKE_POST_REQUEST:\n        {\n          return _objectSpread({}, state);\n        }\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _postIndex3 = state.mainPosts.findIndex(function (v) {\n            return v.id === action.data.postId;\n          });\n\n          var _post3 = state.mainPosts[_postIndex3];\n\n          var _Likers = _post3.Likers.filter(function (v) {\n            return v.id !== action.data.userId;\n          });\n\n          var _mainPosts3 = _toConsumableArray(state.mainPosts);\n\n          _mainPosts3[_postIndex3] = _objectSpread({}, _post3, {\n            Likers: _Likers\n          });\n          return _objectSpread({}, state, {\n            mainPosts: _mainPosts3\n          });\n        }\n\n      case UNLIKE_POST_FAILURE:\n        {\n          return _objectSpread({}, state);\n        }\n\n      case RETWEET_REQUEST:\n        {\n          return _objectSpread({}, state);\n        }\n\n      case RETWEET_SUCCESS:\n        {\n          return _objectSpread({}, state, {\n            mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts))\n          });\n        }\n\n      case RETWEET_FAILURE:\n        {\n          return _objectSpread({}, state);\n        }\n\n      case REMOVE_POST_REQUEST:\n        {\n          return _objectSpread({}, state);\n        }\n\n      case REMOVE_POST_SUCCESS:\n        {\n          return _objectSpread({}, state, {\n            mainPosts: state.mainPosts.filter(function (v) {\n              return v.id !== action.data;\n            })\n          });\n        }\n\n      case REMOVE_POST_FAILURE:\n        {\n          return _objectSpread({}, state);\n        }\n\n      default:\n        {\n          return _objectSpread({}, state);\n        }\n    }\n  });\n});","map":{"version":3,"sources":["C:/ReactNodeBird/Front/Reducer/post.js"],"names":["produce","initialState","mainPosts","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","hasMorePost","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","state","action","draft","type","data","forEach","v","push","filter","i","index","error","postIndex","findIndex","id","postId","post","Comments","comment","comments","lastId","concat","length","Likers","userId"],"mappings":"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","sourcesContent":["// export const initialState={\r\n//     mainPosts: [{\r\n//         User: {\r\n//             id: 1,\r\n//             nickname: 'dbals',\r\n//             content: '첫 번째 게시글',\r\n//             img: 'https://cdn.crowdpic.net/detail-thumb/thumb_d_FF1D6AD8B887EC2359A69C049ECA2A1D.jpg'\r\n//         },\r\n//         content: '첫 번째 게시글',\r\n//         img: 'https://cdn.crowdpic.net/detail-thumb/thumb_d_FF1D6AD8B887EC2359A69C049ECA2A1D.jpg'\r\n//     }],\r\n//     imagePaths: [],\r\n//     addPostErrorReason : false,\r\n//     isAddingPost: false,\r\n// };\r\nimport produce from 'immer';\r\n\r\nexport const initialState = {\r\n    mainPosts: [], // 화면에 보일 포스트들\r\n    imagePaths: [], // 미리보기 이미지 경로\r\n    addPostErrorReason: '', // 포스트 업로드 실패 사유\r\n    isAddingPost: false, // 포스트 업로드 중\r\n    postAdded: false, // 포스트 업로드 성공\r\n    isAddingComment: false,\r\n    addCommentErrorReason: '',\r\n    commentAdded: false,\r\n    hasMorePost:false,\r\n  };\r\n  \r\n  export const LOAD_MAIN_POSTS_REQUEST = 'LOAD_MAIN_POSTS_REQUEST';\r\n  export const LOAD_MAIN_POSTS_SUCCESS = 'LOAD_MAIN_POSTS_SUCCESS';\r\n  export const LOAD_MAIN_POSTS_FAILURE = 'LOAD_MAIN_POSTS_FAILURE';\r\n  \r\n  export const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\n  export const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\n  export const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n  \r\n  export const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\r\n  export const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\r\n  export const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\r\n  \r\n  export const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\r\n  export const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\r\n  export const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\r\n  \r\n  export const REMOVE_IMAGE = 'REMOVE_IMAGE';\r\n  \r\n  export const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\n  export const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\n  export const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n  \r\n  export const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\n  export const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\n  export const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n  \r\n  export const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\n  export const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\n  export const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n  \r\n  export const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\n  export const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\n  export const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n  \r\n  export const LOAD_COMMENTS_REQUEST = 'LOAD_COMMENTS_REQUEST';\r\n  export const LOAD_COMMENTS_SUCCESS = 'LOAD_COMMENTS_SUCCESS';\r\n  export const LOAD_COMMENTS_FAILURE = 'LOAD_COMMENTS_FAILURE';\r\n  \r\n  export const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\n  export const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\n  export const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n  \r\n  export const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\n  export const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\n  export const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n  \r\n  export default (state = initialState, action) => {\r\n    return produce(state,(draft)=>{\r\n      switch (action.type) {\r\n        case UPLOAD_IMAGES_REQUEST: {\r\n          break;\r\n        }\r\n        case UPLOAD_IMAGES_SUCCESS: {\r\n          action.data.forEach(v=>{\r\n            draft.imagePaths.push(v);\r\n          })\r\n          break;\r\n        }\r\n        case UPLOAD_IMAGES_FAILURE: {\r\n          break;\r\n        }\r\n        case REMOVE_IMAGE: {\r\n          return {\r\n            ...state,\r\n            imagePaths: state.imagePaths.filter((v, i) => i !== action.index),\r\n          };\r\n        }\r\n        case ADD_POST_REQUEST: {\r\n          return {\r\n            ...state,\r\n            isAddingPost: true,\r\n            addPostErrorReason: '',\r\n            postAdded: false,\r\n          };\r\n        }\r\n        case ADD_POST_SUCCESS: {\r\n          return {\r\n            ...state,\r\n            isAddingPost: false,\r\n            mainPosts: [action.data, ...state.mainPosts],\r\n            postAdded: true,\r\n            imagePaths: [],\r\n          };\r\n        }\r\n        case ADD_POST_FAILURE: {\r\n          return {\r\n            ...state,\r\n            isAddingPost: false,\r\n            addPostErrorReason: action.error,\r\n          };\r\n        }\r\n        case ADD_COMMENT_REQUEST: {\r\n          return {\r\n            ...state,\r\n            isAddingComment: true,\r\n            addCommentErrorReason: '',\r\n            commentAdded: false,\r\n          };\r\n        }\r\n        case ADD_COMMENT_SUCCESS: {\r\n          const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n          const post = state.mainPosts[postIndex];\r\n          const Comments = [...post.Comments, action.data.comment];\r\n          const mainPosts = [...state.mainPosts];\r\n          mainPosts[postIndex] = { ...post, Comments };\r\n          return {\r\n            ...state,\r\n            isAddingComment: false,\r\n            mainPosts,\r\n            commentAdded: true,\r\n          };\r\n        }\r\n        case ADD_COMMENT_FAILURE: {\r\n          return {\r\n            ...state,\r\n            isAddingComment: false,\r\n            addCommentErrorReason: action.error,\r\n          };\r\n        }\r\n        case LOAD_COMMENTS_SUCCESS: {\r\n          const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n          const post = state.mainPosts[postIndex];\r\n          const Comments = action.data.comments;\r\n          const mainPosts = [...state.mainPosts];\r\n          mainPosts[postIndex] = { ...post, Comments };\r\n          return {\r\n            ...state,\r\n            mainPosts,\r\n          };\r\n        }\r\n        case LOAD_MAIN_POSTS_REQUEST:\r\n        case LOAD_HASHTAG_POSTS_REQUEST:\r\n        case LOAD_USER_POSTS_REQUEST: {\r\n          return {\r\n            ...state,\r\n            mainPosts: action.lastId === 0 ? [] : state.mainPosts,\r\n            hasMorePost:action.lastId ? state.hasMorePost : true,\r\n          };\r\n        }\r\n        case LOAD_MAIN_POSTS_SUCCESS:\r\n        case LOAD_HASHTAG_POSTS_SUCCESS:\r\n        case LOAD_USER_POSTS_SUCCESS: {\r\n          return {\r\n            ...state,\r\n            mainPosts: state.mainPosts.concat(action.data),\r\n            hasMorePost : action.data.length === 10,\r\n          };\r\n        }\r\n        case LOAD_MAIN_POSTS_FAILURE:\r\n        case LOAD_HASHTAG_POSTS_FAILURE:\r\n        case LOAD_USER_POSTS_FAILURE: {\r\n          return {\r\n            ...state,\r\n          };\r\n        }\r\n        case LIKE_POST_REQUEST: {\r\n          return {\r\n            ...state,\r\n          };\r\n        }\r\n        case LIKE_POST_SUCCESS: {\r\n          const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n          const post = state.mainPosts[postIndex];\r\n          const Likers = [{ id: action.data.userId }, ...post.Likers];\r\n          const mainPosts = [...state.mainPosts];\r\n          mainPosts[postIndex] = { ...post, Likers };\r\n          return {\r\n            ...state,\r\n            mainPosts,\r\n          };\r\n        }\r\n        case LIKE_POST_FAILURE: {\r\n          return {\r\n            ...state,\r\n          };\r\n        }\r\n        case UNLIKE_POST_REQUEST: {\r\n          return {\r\n            ...state,\r\n          };\r\n        }\r\n        case UNLIKE_POST_SUCCESS: {\r\n          const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n          const post = state.mainPosts[postIndex];\r\n          const Likers = post.Likers.filter(v => v.id !== action.data.userId);\r\n          const mainPosts = [...state.mainPosts];\r\n          mainPosts[postIndex] = { ...post, Likers };\r\n          return {\r\n            ...state,\r\n            mainPosts,\r\n          };\r\n        }\r\n        case UNLIKE_POST_FAILURE: {\r\n          return {\r\n            ...state,\r\n          };\r\n        }\r\n        case RETWEET_REQUEST: {\r\n          return {\r\n            ...state,\r\n          };\r\n        }\r\n        case RETWEET_SUCCESS: {\r\n          return {\r\n            ...state,\r\n            mainPosts: [action.data, ...state.mainPosts],\r\n          };\r\n        }\r\n        case RETWEET_FAILURE: {\r\n          return {\r\n            ...state,\r\n          };\r\n        }\r\n        case REMOVE_POST_REQUEST: {\r\n          return {\r\n            ...state,\r\n          };\r\n        }\r\n        case REMOVE_POST_SUCCESS: {\r\n          return {\r\n            ...state,\r\n            mainPosts: state.mainPosts.filter(v=>v.id!==action.data),\r\n          };\r\n        }\r\n        case REMOVE_POST_FAILURE: {\r\n          return {\r\n            ...state,\r\n          };\r\n        }\r\n        default: {\r\n          return {\r\n            ...state,\r\n          };\r\n        }\r\n      }\r\n    })\r\n  };"]},"metadata":{},"sourceType":"module"}
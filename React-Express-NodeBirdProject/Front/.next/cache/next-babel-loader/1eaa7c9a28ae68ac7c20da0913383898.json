{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../Reducer/post\";\nimport PostCard from \"../components/PostCard\";\n\nvar HashTag = function HashTag(_ref) {\n  var tag = _ref.tag;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePost = _useSelector.hasMorePost;\n\n  var onScroll = useCallback(function () {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          lastId: mainPosts[mainPosts.length - 1].id,\n          data: tag\n        });\n      }\n    }\n  }, [hasMorePost, mainPosts.length]);\n  useEffect(function () {\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length]);\n  console.log(mainPosts);\n  return __jsx(\"div\", null, mainPosts.map(function (v) {\n    return __jsx(\"p\", null, v.id);\n  }));\n};\n\nHashTag.getInitialProps = function _callee(context) {\n  var tag;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          tag = context.query.tag;\n          console.log(\"hashTag getInitialProps\", context.query.tag);\n          context.store.dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            data: tag\n          });\n          return _context.abrupt(\"return\", {\n            tag: tag\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default HashTag;","map":{"version":3,"sources":["C:/ReactNodeBird/Front/pages/hashtag.js"],"names":["React","useEffect","useDispatch","useSelector","LOAD_HASHTAG_POSTS_REQUEST","PostCard","HashTag","tag","dispatch","state","post","mainPosts","hasMorePost","onScroll","useCallback","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","console","log","map","v","getInitialProps","context","query","store"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,0BAAT,QAA2C,iBAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAC3B,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAD2B,qBAEOC,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFlB;AAAA,MAEnBC,SAFmB,gBAEnBA,SAFmB;AAAA,MAETC,WAFS,gBAETA,WAFS;;AAI3B,MAAMC,QAAQ,GAAGC,WAAW,CAAC,YAAM;AACjC,QAAIC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACxG,UAAIR,WAAJ,EAAiB;AACfJ,QAAAA,QAAQ,CAAC;AACPa,UAAAA,IAAI,EAAEjB,0BADC;AAEPkB,UAAAA,MAAM,EAAEX,SAAS,CAACA,SAAS,CAACY,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAFjC;AAGPC,UAAAA,IAAI,EAAElB;AAHC,SAAD,CAAR;AAKD;AACF;AACF,GAV2B,EAUzB,CAACK,WAAD,EAAcD,SAAS,CAACY,MAAxB,CAVyB,CAA5B;AAYAtB,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCb,QAAlC;AACA,WAAO,YAAM;AACXE,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCd,QAArC;AACD,KAFD;AAGD,GALQ,EAKN,CAACF,SAAS,CAACY,MAAX,CALM,CAAT;AAMAK,EAAAA,OAAO,CAACC,GAAR,CAAYlB,SAAZ;AACA,SACE,mBACGA,SAAS,CAACmB,GAAV,CAAc,UAAAC,CAAC;AAAA,WAAE,iBAAIA,CAAC,CAACP,EAAN,CAAF;AAAA,GAAf,CADH,CADF;AAQD,CA/BD;;AAiCAlB,OAAO,CAAC0B,eAAR,GAA0B,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAClB1B,UAAAA,GADkB,GACZ0B,OAAO,CAACC,KAAR,CAAc3B,GADF;AAExBqB,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCI,OAAO,CAACC,KAAR,CAAc3B,GAArD;AACA0B,UAAAA,OAAO,CAACE,KAAR,CAAc3B,QAAd,CAAuB;AACrBa,YAAAA,IAAI,EAAEjB,0BADe;AAErBqB,YAAAA,IAAI,EAAElB;AAFe,WAAvB;AAHwB,2CAOjB;AAAEA,YAAAA,GAAG,EAAHA;AAAF,WAPiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAUA,eAAeD,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../Reducer/post\";\r\nimport PostCard from \"../components/PostCard\";\r\n\r\nconst HashTag = ({ tag }) => {\r\n  const dispatch = useDispatch();\r\n  const { mainPosts,hasMorePost } = useSelector(state => state.post);\r\n\r\n  const onScroll = useCallback(() => {\r\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n      if (hasMorePost) {\r\n        dispatch({\r\n          type: LOAD_HASHTAG_POSTS_REQUEST,\r\n          lastId: mainPosts[mainPosts.length - 1].id,\r\n          data: tag,\r\n        });\r\n      }\r\n    }\r\n  }, [hasMorePost, mainPosts.length]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts.length]);\r\n  console.log(mainPosts)\r\n  return (\r\n    <div>\r\n      {mainPosts.map(v=><p>{v.id}</p>)}\r\n      {/* {mainPosts.map(c => (\r\n        <PostCard key={+c.createdAt} post={c} />\r\n      ))} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nHashTag.getInitialProps = async context => {\r\n  const tag = context.query.tag;\r\n  console.log(\"hashTag getInitialProps\", context.query.tag);\r\n  context.store.dispatch({\r\n    type: LOAD_HASHTAG_POSTS_REQUEST,\r\n    data: tag\r\n  });\r\n  return { tag };\r\n};\r\n\r\nexport default HashTag;\r\n"]},"metadata":{},"sourceType":"module"}
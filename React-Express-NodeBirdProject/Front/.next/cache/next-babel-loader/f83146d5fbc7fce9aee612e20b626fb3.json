{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport Router from 'next/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Checkbox, Button, Input } from 'antd';\nimport { SIGN_UP_REQUEST } from '../Reducer/user';\nexport const useInput = (initVal = null) => {\n  const {\n    0: value,\n    1: setValue\n  } = useState(initVal);\n  const handler = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nconst Signup = () => {\n  const [id, onChangeId] = useInput('');\n  const [nick, onChangeNick] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: tern,\n    1: setTern\n  } = useState(false);\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: ternError,\n    1: setTernError\n  } = useState(false);\n  const {\n    isSigningUp,\n    me\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!tern) {\n      return setTernError(true);\n    }\n\n    return dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        userId: id,\n        password,\n        nickname: nick\n      }\n    });\n  }, [id, nick, password, tern, setPasswordError]);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  const onChangeTern = useCallback(e => {\n    setTern(e.target.checked);\n    setTernError(false);\n  }, []);\n  useEffect(() => {\n    if (me) {\n      Router.push('/');\n    }\n  }, [me && me.id]);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    }\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-id\"\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(Input, {\n    value: id,\n    name: \"user-id\",\n    required: true,\n    onChange: onChangeId\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-nick\"\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(Input, {\n    value: nick,\n    name: \"user-nick\",\n    required: true,\n    onChange: onChangeNick\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-Password\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(Input, {\n    value: password,\n    type: \"password\",\n    name: \"user-Password\",\n    required: true,\n    onChange: onChangePassword\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password-check\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(Input, {\n    value: passwordCheck,\n    type: \"password\",\n    name: \"user-password-check\",\n    required: true,\n    onChange: onChangePasswordCheck\n  }), passwordError ? __jsx(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4\") : \"\"), __jsx(\"div\", null, __jsx(Checkbox, {\n    name: \"user-tern\",\n    value: tern,\n    onChange: onChangeTern\n  }, \"\\uC57D\\uAD00 \\uB3D9\\uC758 \\uD558\\uC2DC\\uAC8C \\uC2B5\\uB2C8\\uAE4C?\"), ternError ? __jsx(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758 \\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4\") : ''), __jsx(\"div\", null, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isSigningUp\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/ReactNodeBird/Front/pages/signup.js"],"names":["React","useState","useCallback","useEffect","Router","useDispatch","useSelector","Form","Checkbox","Button","Input","SIGN_UP_REQUEST","useInput","initVal","value","setValue","handler","e","target","Signup","id","onChangeId","nick","onChangeNick","password","onChangePassword","passwordCheck","setPasswordCheck","tern","setTern","passwordError","setPasswordError","ternError","setTernError","isSigningUp","me","state","user","dispatch","onSubmit","preventDefault","type","data","userId","nickname","onChangePasswordCheck","onChangeTern","checked","push","padding","color"],"mappings":"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","sourcesContent":["import React, { useState, useCallback,useEffect } from 'react';\r\nimport Router from 'next/router'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Checkbox, Button, Input } from 'antd';\r\nimport { SIGN_UP_REQUEST } from '../Reducer/user';\r\n\r\n\r\nexport const useInput = (initVal = null) => {\r\n    const [value, setValue] = useState(initVal);\r\n    const handler = useCallback((e) => {\r\n        setValue(e.target.value);\r\n    }, [])\r\n    return [value, handler];\r\n}\r\n\r\nconst Signup = () => {\r\n    const [id, onChangeId] = useInput('');\r\n    const [nick, onChangeNick] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [tern, setTern] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [ternError, setTernError] = useState(false);\r\n    const { isSigningUp , me } =useSelector(state=>state.user);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if (password !== passwordCheck) {\r\n            return setPasswordError(true);\r\n        }\r\n        if (!tern) {\r\n            return setTernError(true);\r\n        }\r\n        return dispatch({\r\n            type: SIGN_UP_REQUEST,\r\n            data: {\r\n              userId:id,\r\n              password,\r\n              nickname:nick,\r\n            },\r\n          });\r\n    }, [id,nick,password, tern, setPasswordError]);\r\n\r\n    const onChangePasswordCheck = useCallback((e) => {\r\n        setPasswordCheck(e.target.value);\r\n        setPasswordError(e.target.value !== password)\r\n    }, [password]);\r\n    const onChangeTern = useCallback((e) => {\r\n        setTern(e.target.checked);\r\n        setTernError(false);\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        if(me){\r\n            Router.push('/')\r\n        }\r\n\r\n    },[me && me.id])\r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={onSubmit} style={{ padding: 10 }}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">아이디</label>\r\n                    <Input value={id} name=\"user-id\" required onChange={onChangeId} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">닉네임</label>\r\n                    <Input value={nick} name=\"user-nick\" required onChange={onChangeNick} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-Password\">비밀번호</label>\r\n                    <Input value={password} type=\"password\" name=\"user-Password\" required onChange={onChangePassword} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password-check\">비밀번호체크</label>\r\n                    <Input value={passwordCheck} type=\"password\" name=\"user-password-check\" required onChange={onChangePasswordCheck} />\r\n                    {passwordError ? <div style={{ color: 'red' }}>비밀번호가 일치하지 않습니다</div> : \"\"}\r\n                </div>\r\n                <div >\r\n                    <Checkbox name=\"user-tern\" value={tern} onChange={onChangeTern}>약관 동의 하시게 습니까?</Checkbox>\r\n                    {ternError ? <div style={{ color: 'red' }}>약관에 동의 하셔야 합니다</div> : ''}\r\n                </div>\r\n                <div>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading={isSigningUp} >가입하기</Button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}
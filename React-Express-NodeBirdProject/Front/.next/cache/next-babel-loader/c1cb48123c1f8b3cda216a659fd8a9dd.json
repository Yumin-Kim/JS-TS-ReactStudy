{"ast":null,"code":"import { put, all, fork, takeLatest, delay, call } from 'redux-saga/effects';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, LOAD_MAIN_POSTS_SUCCESS, LOAD_MAIN_POSTS_REQUEST, LOAD_MAIN_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_COMMENTS_REQUEST, LOAD_COMMENTS_SUCCESS, LOAD_COMMENTS_FAILURE, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST } from '../Reducer/post';\nimport axios from 'axios';\n\nfunction addPostAPI(postData) {\n  return axios.post('http://localhost:3065/api/post', postData, {\n    withCredentials: true\n  });\n}\n\nfunction* appPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, appPost);\n}\n\nfunction loadMainPostsAPI() {\n  return axios.get('http://localhost:3065/api/posts');\n}\n\nfunction* loadMainPosts() {\n  try {\n    const result = yield call(loadMainPostsAPI);\n    yield put({\n      type: LOAD_MAIN_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_MAIN_POSTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchMainLoadPosts() {\n  yield takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPosts);\n}\n\nfunction loadUserPostsAPI(id) {\n  return axios.get(`http://localhost:3065/api/user/${id}/posts`);\n}\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data);\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadUserPosts() {\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\nfunction loadHashtagPostsAPI(tag) {\n  return axios.get(`http://localhost:3065/api/hashtag/${tag}`);\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    const result = yield call(loadHashtagPostsAPI, action.data);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`http://localhost:3065/api/posts/${data.postId}/comment`, {\n    content: data.content\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId,\n        comment: result.data\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction loadCommentsAPI(postId) {\n  return axios.get(`http://localhost:3065/api/posts/${postId}/comments`);\n}\n\nfunction* loadComments(action) {\n  try {\n    const result = yield call(loadCommentsAPI, action.data);\n    yield put({\n      type: LOAD_COMMENTS_SUCCESS,\n      data: {\n        postId: action.data,\n        comments: result.data\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOAD_COMMENTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadComments() {\n  yield takeLatest(LOAD_COMMENTS_REQUEST, loadComments);\n}\n\nfunction uploadImagesAPI(formData) {\n  return axios.post(`http://localhost:3065/api/posts/images`, formData, {\n    withCredentials: true\n  });\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchLoadComments), fork(watchMainLoadPosts), fork(watchLoadHashtagPosts), fork(watchLoadUserPosts), fork(watchUploadImages)]);\n}","map":{"version":3,"sources":["c:/ReactNodeBird/Front/sagas/post.js"],"names":["put","all","fork","takeLatest","delay","call","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","LOAD_MAIN_POSTS_SUCCESS","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","axios","addPostAPI","postData","post","withCredentials","appPost","action","result","data","type","e","error","watchAddPost","loadMainPostsAPI","get","loadMainPosts","watchMainLoadPosts","loadUserPostsAPI","id","loadUserPosts","watchLoadUserPosts","loadHashtagPostsAPI","tag","loadHashtagPosts","watchLoadHashtagPosts","addCommentAPI","postId","content","addComment","comment","console","watchAddComment","loadCommentsAPI","loadComments","comments","watchLoadComments","uploadImagesAPI","formData","uploadImages","watchUploadImages","userSaga"],"mappings":"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","sourcesContent":["import {put, all, fork,takeLatest,delay,call } from 'redux-saga/effects';\r\nimport { \r\n  ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE ,\r\n  ADD_COMMENT_FAILURE,ADD_COMMENT_REQUEST,ADD_COMMENT_SUCCESS, \r\n  LOAD_MAIN_POSTS_SUCCESS, LOAD_MAIN_POSTS_REQUEST, LOAD_MAIN_POSTS_FAILURE, \r\n  LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, \r\n  LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_COMMENTS_REQUEST, LOAD_COMMENTS_SUCCESS, LOAD_COMMENTS_FAILURE, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST \r\n} from '../Reducer/post';\r\nimport axios from 'axios';\r\n\r\nfunction addPostAPI (postData) {\r\n  return axios.post('http://localhost:3065/api/post',postData,{\r\n    withCredentials:true,\r\n  })\r\n}\r\n\r\nfunction* appPost(action){\r\n  try{\r\n    const result = yield call(addPostAPI,action.data)\r\n    yield put({\r\n      type:ADD_POST_SUCCESS,\r\n      data:result.data,\r\n    })\r\n  }catch(e){\r\n    yield put({\r\n      type:ADD_POST_FAILURE,\r\n      error:e\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchAddPost(){\r\n  yield takeLatest(ADD_POST_REQUEST,appPost);\r\n}\r\nfunction loadMainPostsAPI () {\r\n  return axios.get('http://localhost:3065/api/posts')\r\n\r\n}\r\n\r\nfunction* loadMainPosts(){\r\n  try{\r\n    const result = yield call(loadMainPostsAPI);\r\n    yield put({\r\n      type:LOAD_MAIN_POSTS_SUCCESS,\r\n      data: result.data\r\n    })\r\n  }catch(e){\r\n    yield put({\r\n      type:LOAD_MAIN_POSTS_FAILURE,\r\n      error:e\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchMainLoadPosts(){\r\n  yield takeLatest(LOAD_MAIN_POSTS_REQUEST,loadMainPosts);\r\n}\r\nfunction loadUserPostsAPI (id) {\r\n  return axios.get(`http://localhost:3065/api/user/${id}/posts`)\r\n\r\n}\r\n\r\nfunction* loadUserPosts(action){\r\n  try{\r\n    const result = yield call(loadUserPostsAPI,action.data);\r\n    yield put({\r\n      type:LOAD_USER_POSTS_SUCCESS,\r\n      data: result.data\r\n    })\r\n  }catch(e){\r\n    yield put({\r\n      type:LOAD_USER_POSTS_FAILURE,\r\n      error:e\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchLoadUserPosts(){\r\n  yield takeLatest(LOAD_USER_POSTS_REQUEST,loadUserPosts);\r\n}\r\nfunction loadHashtagPostsAPI (tag) {\r\n  return axios.get(`http://localhost:3065/api/hashtag/${tag}`)\r\n\r\n}\r\n\r\nfunction* loadHashtagPosts(action){\r\n  try{\r\n    const result = yield call(loadHashtagPostsAPI,action.data);\r\n    yield put({\r\n      type:LOAD_HASHTAG_POSTS_SUCCESS,\r\n      data: result.data\r\n    })\r\n  }catch(e){\r\n    yield put({\r\n      type:LOAD_HASHTAG_POSTS_FAILURE,\r\n      error:e\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchLoadHashtagPosts(){\r\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST,loadHashtagPosts);\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`http://localhost:3065/api/posts/${data.postId}/comment`, { content: data.content }, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: {\r\n        postId: action.data.postId,\r\n        comment: result.data,\r\n      },\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nfunction loadCommentsAPI(postId) {\r\n  return axios.get(`http://localhost:3065/api/posts/${postId}/comments`);\r\n}\r\n\r\nfunction* loadComments(action) {\r\n  try {\r\n    const result = yield call(loadCommentsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_COMMENTS_SUCCESS,\r\n      data: {\r\n        postId: action.data,\r\n        comments: result.data,\r\n      },\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_COMMENTS_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadComments() {\r\n  yield takeLatest(LOAD_COMMENTS_REQUEST, loadComments);\r\n}\r\nfunction uploadImagesAPI(formData) {\r\n  return axios.post(`http://localhost:3065/api/posts/images`,formData,{\r\n    withCredentials:true\r\n  });\r\n}\r\n\r\nfunction* uploadImages(action) {\r\n  try {\r\n    const result = yield call(uploadImagesAPI, action.data);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchUploadImages() {\r\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n      fork(watchAddPost),\r\n      fork(watchAddComment),\r\n      fork(watchLoadComments),\r\n      fork(watchMainLoadPosts),\r\n      fork(watchLoadHashtagPosts),\r\n      fork(watchLoadUserPosts),\r\n      fork(watchUploadImages)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { Divider, Icon } from 'antd';\nimport ImagesZoom from './ImagesZoom';\n\nconst PostImages = ({\n  images\n}) => {\n  const {\n    0: showImagesZoom,\n    1: setShowImagesZoom\n  } = useState(false);\n  const onZoom = useCallback(() => {\n    setShowImagesZoom(true);\n  }, []);\n  const onClose = useCallback(() => {\n    setShowImagesZoom(false);\n  }, []);\n\n  if (images.length === 1) {\n    return __jsx(React.Fragment, null, __jsx(\"img\", {\n      src: `http://localhost:3065/${images[0].src}`,\n      onClick: onZoom\n    }), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose\n    }));\n  }\n\n  if (images.length === 2) {\n    return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(\"img\", {\n      src: `http://localhost:3065/${images[0].src}`,\n      width: \"50%\",\n      onClick: onZoom\n    }), __jsx(\"img\", {\n      src: `http://localhost:3065/${images[1].src}`,\n      width: \"50%\",\n      onClick: onZoom\n    })), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose\n    }));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(\"img\", {\n    src: `http://localhost:3065/${images[0].src}`,\n    width: \"50%\"\n  }), __jsx(\"div\", {\n    style: {\n      display: 'inline-block',\n      width: '50%',\n      textAlign: 'center',\n      verticalAlign: 'middle'\n    }\n  }, __jsx(Icon, {\n    type: \"plus\"\n  }), __jsx(\"br\", null), images.length - 1, \"\\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354\\uBCF4\\uAE30\")), showImagesZoom && __jsx(ImagesZoom, {\n    images: images,\n    onClose: onClose\n  }));\n};\n\nexport default PostImages;","map":{"version":3,"sources":["C:/ReactNodeBird/Front/components/PostImages.js"],"names":["React","useCallback","useState","Divider","Icon","ImagesZoom","PostImages","images","showImagesZoom","setShowImagesZoom","onZoom","onClose","length","src","display","width","textAlign","verticalAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,MAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9B,QAAM;AAAA,OAAEC,cAAF;AAAA,OAAmBC;AAAnB,MAAyCP,QAAQ,CAAC,KAAD,CAAvD;AAEA,QAAMQ,MAAM,GAAGT,WAAW,CAAC,MAAK;AAC5BQ,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAFyB,EAExB,EAFwB,CAA1B;AAIA,QAAME,OAAO,GAAGV,WAAW,CAAC,MAAM;AAC9BQ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAF0B,EAEzB,EAFyB,CAA3B;;AAIA,MAAGF,MAAM,CAACK,MAAP,KAAkB,CAArB,EAAwB;AACpB,WACI,4BACI;AAAK,MAAA,GAAG,EAAG,yBAAwBL,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAI,EAAjD;AAAoD,MAAA,OAAO,EAAEH;AAA7D,MADJ,EAEKF,cAAc,IAAI,MAAC,UAAD;AAAY,MAAA,MAAM,EAAGD,MAArB;AAA6B,MAAA,OAAO,EAAEI;AAAtC,MAFvB,CADJ;AAMH;;AACD,MAAGJ,MAAM,CAACK,MAAP,KAAkB,CAArB,EAAwB;AACpB,WACI,4BACA,mBACE;AAAK,MAAA,GAAG,EAAG,yBAAwBL,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAI,EAAjD;AAAoD,MAAA,KAAK,EAAC,KAA1D;AAAgE,MAAA,OAAO,EAAEH;AAAzE,MADF,EAEE;AAAK,MAAA,GAAG,EAAG,yBAAwBH,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAI,EAAjD;AAAoD,MAAA,KAAK,EAAC,KAA1D;AAAgE,MAAA,OAAO,EAAEH;AAAzE,MAFF,CADA,EAKCF,cAAc,IAAI,MAAC,UAAD;AAAY,MAAA,MAAM,EAAED,MAApB;AAA4B,MAAA,OAAO,EAAEI;AAArC,MALnB,CADJ;AASH;;AACD,SACI,4BACA,mBACI;AAAK,IAAA,GAAG,EAAG,yBAAwBJ,MAAM,CAAC,CAAD,CAAN,CAAUM,GAAI,EAAjD;AAAoD,IAAA,KAAK,EAAC;AAA1D,IADJ,EAEI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAC,cAAT;AAAwBC,MAAAA,KAAK,EAAC,KAA9B;AAAoCC,MAAAA,SAAS,EAAC,QAA9C;AAAuDC,MAAAA,aAAa,EAAC;AAArE;AAAZ,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,IADJ,EAEI,iBAFJ,EAGMV,MAAM,CAACK,MAAP,GAAgB,CAHtB,iDAFJ,CADA,EAUCJ,cAAc,IAAI,MAAC,UAAD;AAAY,IAAA,MAAM,EAAGD,MAArB;AAA6B,IAAA,OAAO,EAAEI;AAAtC,IAVnB,CADJ;AAcH,CA5CD;;AA8CA,eAAeL,UAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { Divider, Icon } from 'antd';\r\nimport ImagesZoom from './ImagesZoom';\r\n\r\nconst PostImages = ({ images }) =>{\r\n    const [ showImagesZoom , setShowImagesZoom ] = useState(false);\r\n\r\n    const onZoom = useCallback(() =>{\r\n        setShowImagesZoom(true);\r\n    },[])\r\n\r\n    const onClose = useCallback(() => {\r\n        setShowImagesZoom(false)\r\n    },[])\r\n    \r\n    if(images.length === 1 ){\r\n        return(\r\n            <>\r\n                <img src={`http://localhost:3065/${images[0].src}`} onClick={onZoom} />\r\n                {showImagesZoom && <ImagesZoom images ={images} onClose={onClose} />}\r\n            </>\r\n        )\r\n    }\r\n    if(images.length === 2 ){\r\n        return(\r\n            <>\r\n            <div>\r\n              <img src={`http://localhost:3065/${images[0].src}`} width=\"50%\" onClick={onZoom} />\r\n              <img src={`http://localhost:3065/${images[1].src}`} width=\"50%\" onClick={onZoom} />\r\n            </div>\r\n            {showImagesZoom && <ImagesZoom images={images} onClose={onClose} />}\r\n          </>\r\n        )\r\n    }\r\n    return(\r\n        <>\r\n        <div>\r\n            <img src={`http://localhost:3065/${images[0].src}`} width=\"50%\" />\r\n            <div style={{display:'inline-block',width:'50%',textAlign:'center',verticalAlign:'middle'}}>\r\n                <Icon type=\"plus\" />\r\n                <br/>\r\n                { images.length - 1 }\r\n                개의 사진 더보기\r\n            </div>\r\n        </div>\r\n        {showImagesZoom && <ImagesZoom images ={images} onClose={onClose} />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostImages;"]},"metadata":{},"sourceType":"module"}
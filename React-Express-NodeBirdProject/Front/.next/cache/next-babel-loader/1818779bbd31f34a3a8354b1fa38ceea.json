{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useCallback, useRef } from \"react\";\nimport { Form, Input, Button, Card, Icon, Avatar } from \"antd\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginAction, logoutAction } from \"../Reducer/user\";\nimport { LOAD_MAIN_POSTS_REQUEST } from \"../Reducer/post\"; //useDispatch은 action을 실행을 담당하고 있고\n//useSelector은 reducer에 있는 state를 가지고 올 수 있다\n\nvar Home = function Home() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost;\n\n  var countRef = useRef([]);\n  var onScoll = useCallback(function () {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n        var lastId = mainPosts[mainPosts.length - 1].id;\n        if (!countRef.current.includes(lastId)) dispatch({\n          type: LOAD_MAIN_POSTS_REQUEST,\n          lastId: lastId\n        });\n        countRef.current.push(lastId);\n      }\n    }\n  }, [mainPosts.length]);\n  useEffect(function () {\n    window.addEventListener(\"scroll\", onScoll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScoll);\n    };\n  }, [mainPosts.length]);\n  return __jsx(React.Fragment, null, me ? __jsx(\"div\", null, me.nickname, \"\\uC774 \\uB85C\\uADF8\\uC778 \\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4\") : __jsx(\"div\", null, \"\\uB85C\\uADF8\\uC544\\uC6C3 \\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4\"), __jsx(\"div\", null, me && __jsx(PostForm, null), mainPosts.map(function (val, el) {\n    return __jsx(PostCard, {\n      key: val.id,\n      post: val\n    });\n  })));\n};\n\nHome.getInitialProps = function _callee(context) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          context.store.dispatch({\n            type: LOAD_MAIN_POSTS_REQUEST\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Home;","map":{"version":3,"sources":["c:/ReactNodeBird/Front/pages/index.js"],"names":["React","useEffect","useCallback","useRef","Form","Input","Button","Card","Icon","Avatar","PostForm","PostCard","useDispatch","useSelector","loginAction","logoutAction","LOAD_MAIN_POSTS_REQUEST","Home","dispatch","state","user","me","post","mainPosts","hasMorePost","countRef","onScoll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","current","includes","type","push","addEventListener","removeEventListener","nickname","map","val","el","getInitialProps","context","store"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,MAAxC,QAAsD,OAAtD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,MAA1C,QAAwD,MAAxD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,iBAA1C;AACA,SAASC,uBAAT,QAAwC,iBAAxC,C,CAEA;AACA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AADiB,qBAEFC,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFT;AAAA,MAETC,EAFS,gBAETA,EAFS;;AAAA,sBAGkBR,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAAN,CAH7B;AAAA,MAGTC,SAHS,iBAGTA,SAHS;AAAA,MAGEC,WAHF,iBAGEA,WAHF;;AAIjB,MAAMC,QAAQ,GAAGtB,MAAM,CAAC,EAAD,CAAvB;AAEA,MAAMuB,OAAO,GAAGxB,WAAW,CAAC,YAAM;AAChC,QACEyB,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,UAAIR,WAAJ,EAAiB;AACf,YAAMS,MAAM,GAAGV,SAAS,CAACA,SAAS,CAACW,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAA/C;AACA,YAAI,CAACV,QAAQ,CAACW,OAAT,CAAiBC,QAAjB,CAA0BJ,MAA1B,CAAL,EACEf,QAAQ,CAAC;AACPoB,UAAAA,IAAI,EAAEtB,uBADC;AAEPiB,UAAAA,MAAM,EAANA;AAFO,SAAD,CAAR;AAIFR,QAAAA,QAAQ,CAACW,OAAT,CAAiBG,IAAjB,CAAsBN,MAAtB;AACD;AACF;AACF,GAf0B,EAexB,CAACV,SAAS,CAACW,MAAX,CAfwB,CAA3B;AAiBAjC,EAAAA,SAAS,CAAC,YAAM;AACd0B,IAAAA,MAAM,CAACa,gBAAP,CAAwB,QAAxB,EAAkCd,OAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACc,mBAAP,CAA2B,QAA3B,EAAqCf,OAArC;AACD,KAFD;AAGD,GALQ,EAKN,CAACH,SAAS,CAACW,MAAX,CALM,CAAT;AAOA,SACE,4BACGb,EAAE,GACD,mBAAMA,EAAE,CAACqB,QAAT,6DADC,GAGD,6EAJJ,EAME,mBACGrB,EAAE,IAAI,MAAC,QAAD,OADT,EAEGE,SAAS,CAACoB,GAAV,CAAc,UAACC,GAAD,EAAMC,EAAN,EAAa;AAC1B,WAAO,MAAC,QAAD;AAAU,MAAA,GAAG,EAAED,GAAG,CAACT,EAAnB;AAAuB,MAAA,IAAI,EAAES;AAA7B,MAAP;AACD,GAFA,CAFH,CANF,CADF;AAeD,CA7CD;;AA+CA3B,IAAI,CAAC6B,eAAL,GAAuB,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AACrBA,UAAAA,OAAO,CAACC,KAAR,CAAc9B,QAAd,CAAuB;AACrBoB,YAAAA,IAAI,EAAEtB;AADe,WAAvB;;AADqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAMA,eAAeC,IAAf","sourcesContent":["import React, { useEffect, useCallback, useRef } from \"react\";\r\nimport { Form, Input, Button, Card, Icon, Avatar } from \"antd\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginAction, logoutAction } from \"../Reducer/user\";\r\nimport { LOAD_MAIN_POSTS_REQUEST } from \"../Reducer/post\";\r\n\r\n//useDispatch은 action을 실행을 담당하고 있고\r\n//useSelector은 reducer에 있는 state를 가지고 올 수 있다\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector(state => state.user);\r\n  const { mainPosts, hasMorePost } = useSelector(state => state.post);\r\n  const countRef = useRef([]);\r\n\r\n  const onScoll = useCallback(() => {\r\n    if (\r\n      window.scrollY + document.documentElement.clientHeight >\r\n      document.documentElement.scrollHeight - 300\r\n    ) {\r\n      if (hasMorePost) {\r\n        const lastId = mainPosts[mainPosts.length - 1].id;\r\n        if (!countRef.current.includes(lastId))\r\n          dispatch({\r\n            type: LOAD_MAIN_POSTS_REQUEST,\r\n            lastId\r\n          });\r\n        countRef.current.push(lastId);\r\n      }\r\n    }\r\n  }, [mainPosts.length]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", onScoll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScoll);\r\n    };\r\n  }, [mainPosts.length]);\r\n\r\n  return (\r\n    <>\r\n      {me ? (\r\n        <div>{me.nickname}이 로그인 하셨습니다</div>\r\n      ) : (\r\n        <div>로그아웃 하셨습니다</div>\r\n      )}\r\n      <div>\r\n        {me && <PostForm />}\r\n        {mainPosts.map((val, el) => {\r\n          return <PostCard key={val.id} post={val}  />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nHome.getInitialProps = async context => {\r\n  context.store.dispatch({\r\n    type: LOAD_MAIN_POSTS_REQUEST\r\n  });\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
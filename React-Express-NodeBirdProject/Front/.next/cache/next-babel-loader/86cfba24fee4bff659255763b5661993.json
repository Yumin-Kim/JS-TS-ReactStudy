{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useCallback } from 'react';\nimport { Form, Input, Button, Card, Icon, Avatar } from 'antd';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginAction, logoutAction } from '../Reducer/user';\nimport { LOAD_MAIN_POSTS_REQUEST } from '../Reducer/post'; //useDispatch은 action을 실행을 담당하고 있고\n//useSelector은 reducer에 있는 state를 가지고 올 수 있다\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost\n  } = useSelector(state => state.post);\n  const onScoll = useCallback(() => {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n        dispatch({\n          type: LOAD_MAIN_POSTS_REQUEST,\n          lastId: mainPosts[mainPosts.length - 1].id\n        });\n      }\n    }\n  }, [mainPosts.length]);\n  useEffect(() => {\n    window.addEventListener('scroll', onScoll);\n    return () => {\n      window.removeEventListener('scroll', onScoll);\n    };\n  }, [mainPosts.length]);\n  return __jsx(React.Fragment, null, me ? __jsx(\"div\", null, me.nickname, \"\\uC774 \\uB85C\\uADF8\\uC778 \\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4\") : __jsx(\"div\", null, \"\\uB85C\\uADF8\\uC544\\uC6C3 \\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4\"), __jsx(\"div\", null, me && __jsx(PostForm, null), mainPosts.map((val, el) => {\n    return __jsx(PostCard, {\n      post: val,\n      key: val\n    });\n  })));\n};\n\nHome.getInitialProps = async context => {\n  context.store.dispatch({\n    type: LOAD_MAIN_POSTS_REQUEST\n  });\n};\n\nexport default Home;","map":{"version":3,"sources":["c:/ReactNodeBird/Front/pages/index.js"],"names":["React","useEffect","useCallback","Form","Input","Button","Card","Icon","Avatar","PostForm","PostCard","useDispatch","useSelector","loginAction","logoutAction","LOAD_MAIN_POSTS_REQUEST","Home","dispatch","me","state","user","mainPosts","hasMorePost","post","onScoll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","addEventListener","removeEventListener","nickname","map","val","el","getInitialProps","context","store"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,MAA1C,QAAwD,MAAxD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,iBAA1C;AACA,SAASC,uBAAT,QAAwC,iBAAxC,C,CAEA;AACA;;AAGA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAASN,WAAW,CAACO,KAAK,IAAEA,KAAK,CAACC,IAAd,CAA1B;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BV,WAAW,CAACO,KAAK,IAAEA,KAAK,CAACI,IAAd,CAA9C;AAEA,QAAMC,OAAO,GAAGtB,WAAW,CAAC,MAAK;AAC7B,QAAGuB,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAuC,GAAnG,EAAwG;AACpG,UAAGR,WAAH,EAAe;AACXL,QAAAA,QAAQ,CAAC;AACLc,UAAAA,IAAI,EAAChB,uBADA;AAELiB,UAAAA,MAAM,EAACX,SAAS,CAACA,SAAS,CAACY,MAAV,GAAiB,CAAlB,CAAT,CAA8BC;AAFhC,SAAD,CAAR;AAIH;AACJ;AACJ,GAT0B,EASzB,CAACb,SAAS,CAACY,MAAX,CATyB,CAA3B;AAWAhC,EAAAA,SAAS,CAAC,MAAI;AACVwB,IAAAA,MAAM,CAACU,gBAAP,CAAwB,QAAxB,EAAiCX,OAAjC;AACA,WAAO,MAAI;AACPC,MAAAA,MAAM,CAACW,mBAAP,CAA2B,QAA3B,EAAoCZ,OAApC;AACH,KAFD;AAGH,GALQ,EAKP,CAACH,SAAS,CAACY,MAAX,CALO,CAAT;AAOA,SACI,4BACKf,EAAE,GAAC,mBAAMA,EAAE,CAACmB,QAAT,6DAAD,GAAqC,6EAD5C,EAEI,mBACKnB,EAAE,IAAI,MAAC,QAAD,OADX,EAEKG,SAAS,CAACiB,GAAV,CAAc,CAACC,GAAD,EAAKC,EAAL,KAAY;AACvB,WACI,MAAC,QAAD;AAAU,MAAA,IAAI,EAAED,GAAhB;AAAqB,MAAA,GAAG,EAAEA;AAA1B,MADJ;AAGH,GAJA,CAFL,CAFJ,CADJ;AAaH,CApCD;;AAsCAvB,IAAI,CAACyB,eAAL,GAAuB,MAAOC,OAAP,IAAkB;AACrCA,EAAAA,OAAO,CAACC,KAAR,CAAc1B,QAAd,CAAuB;AACnBc,IAAAA,IAAI,EAAChB;AADc,GAAvB;AAGH,CAJD;;AAMA,eAAeC,IAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\r\nimport { Form, Input, Button, Card, Icon, Avatar } from 'antd';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginAction, logoutAction } from '../Reducer/user';\r\nimport { LOAD_MAIN_POSTS_REQUEST } from '../Reducer/post';\r\n\r\n//useDispatch은 action을 실행을 담당하고 있고\r\n//useSelector은 reducer에 있는 state를 가지고 올 수 있다\r\n\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const { me } = useSelector(state=>state.user);\r\n    const { mainPosts ,hasMorePost } = useSelector(state=>state.post);\r\n\r\n    const onScoll = useCallback(() =>{\r\n        if(window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight -300 ){\r\n            if(hasMorePost){\r\n                dispatch({\r\n                    type:LOAD_MAIN_POSTS_REQUEST,\r\n                    lastId:mainPosts[mainPosts.length-1].id\r\n                })\r\n            }\r\n        }\r\n    },[mainPosts.length])\r\n    \r\n    useEffect(()=>{\r\n        window.addEventListener('scroll',onScoll);\r\n        return ()=>{\r\n            window.removeEventListener('scroll',onScoll);\r\n        }\r\n    },[mainPosts.length])\r\n    \r\n    return (\r\n        <>\r\n            {me?<div>{me.nickname}이 로그인 하셨습니다</div>:<div>로그아웃 하셨습니다</div>}\r\n            <div>\r\n                {me && <PostForm />}\r\n                {mainPosts.map((val,el) => {\r\n                    return (\r\n                        <PostCard post={val} key={val} />\r\n                    );\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nHome.getInitialProps = async (context) =>{\r\n    context.store.dispatch({\r\n        type:LOAD_MAIN_POSTS_REQUEST,\r\n    })\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}